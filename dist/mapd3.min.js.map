{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///mapd3.min.js","webpack:///webpack/bootstrap bb67db3b0b842a8938af","webpack:///./src/bundle.js","webpack:///./src/charts/chart.js","webpack:///./src/charts/helpers/d3-service.js","webpack:///./~/d3/build/d3.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/scale.js","webpack:///./src/charts/line.js","webpack:///./src/charts/bar.js","webpack:///./src/charts/axis.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/brush.js","webpack:///./src/charts/hover.js","webpack:///./src/charts/binning.js","webpack:///./src/charts/interactors.js","webpack:///./src/charts/domain-editor.js","webpack:///./src/charts/brush-range-editor.js","webpack:///./src/charts/label.js","webpack:///./src/charts/data-manager.js","webpack:///./src/charts/observer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","Interactors","Hover","Brush","Label","BrushRangeEditor","DomainEditor","Binning","Observer","DataManager","Legend","Tooltip","Chart","undefined","_chart","_chart2","_tooltip","_tooltip2","_legend","_legend2","_dataManager","_dataManager2","_observer","_observer2","_binning","_binning2","_domainEditor","_domainEditor2","_brushRangeEditor","_brushRangeEditor2","_label","_label2","_brush","_brush2","_hover","_hover2","_interactors","_interactors2","_colors","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_container","render","buildSVG","dataObject","dataBySeries","buildChart","w","config","width","cache","container","clientWidth","h","height","clientHeight","chartWidth","Math","max","margin","left","right","chartHeight","top","bottom","svg","template","base","d3","select","html","style","headerGroup","panel","chart","addEvents","assign","components","scale","_scale2","axis","_axis2","line","_line2","bar","_bar2","tooltip","legend","brush","hover","binning","domainEditor","brushRangeEditor","label","eventCollector","onBrush","_common","rebind","onHover","onBinning","onDomainEditor","onBrushRangeEditor","onLabel","onPanel","dispatcher","attr","setConfig","setData","scales","getScales","setScales","drawAxis","drawGridLines","drawMarks","bindEvents","setVisibility","tooltipIsEnabled","legendContent","map","d","setTitle","legendTitle","setContent","setXPosition","legendXPosition","setYPosition","legendYPosition","drawTooltip","legendIsEnabled","setBrushExtent","brushRangeMin","brushRangeMax","brushIsEnabled","drawBrush","setBinning","binningResolution","setAuto","binningIsAuto","drawBinning","binningIsEnabled","drawDomainEditor","domainEditorIsEnabled","setRangeMin","setRangeMax","drawRangeEditor","brushRangeIsEnabled","setXLabels","xLabel","setYLabels","yLabel","setY2Labels","y2Label","drawLabels","triggerIntroAnimation","_data","data","cloneData","_constants","keys","SERIES","cleanedData","dataManager","cleanData","keyType","isAnimated","maskingRectangle","transition","duration","animationDuration","ease","on","remove","THROTTLE_DELAY","throttledDispatch","throttle","apply","arguments","mouse","node","_d3$mouse","_d3$mouse2","_slicedToArray","mouseX","mouseY","xPosition","dataPoint","getNearestDataPoint","dataPointXPosition","xScale","DATA","getEvents","_config","override","destroy","chartType","easeLinear","colorSchema","mapdColors","defaultColor","xDomain","yDomain","y2Domain","tickPadding","xAxisFormat","yAxisFormat","y2AxisFormat","tickSizes","yTicks","y2Ticks","xTickSkip","grid","axisTransitionDuration","xTitle","yTitle","dotRadius","mouseChaseDuration","tooltipEase","easeQuadInOut","tooltipHeight","tooltipWidth","seriesOrder","dateFormat","numberFormat","binningToggles","yScale","y2Scale","hasSecondAxis","colorScale","xAxis","yAxis","yAxis2","dataByKey","groupKeys","stackData","stack","flatDataSorted","dispatch","sliceIterator","arr","i","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError","_d3Service","_scale","_line","_bar","_axis","enumerable","get","axisBottom","axisLeft","axisRight","timeFormat","utcFormat","format","bisector","extent","sum","range","merge","nest","event","randomUniform","randomNormal","timeDay","timeMonth","area","curveCatmullRom","stackOffsetNone","stackOrderNone","scaleTime","scalePoint","scaleBand","scaleLinear","scaleOrdinal","brushX","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","y","number$1","center","offset","bandwidth","round","entering","__axis","orient","context","values","tickValues","ticks","tickArguments","domain","tickFormat","identity$1","spacing","tickSizeInner","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","text","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","tickSizeOuter","filter","each","_","slice$1","slice","tickSize","axisTop","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","name","indexOf","type","set","callback","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","defaultTouchable","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","schedule$$1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","__brush","empty","brushSelection","dim","output","brush$1","X","brushY","Y","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","validSegment","segment","compareIntersection","clipAntimeridianLine","clean","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","from","to","clipRectangle","visible","interpolate","a1","corner","comparePoint","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","startInside","cleanInside","clipRejoin","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","fitExtent","projection","clip","clipExtent","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","transformRotate","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","shuffle$1","random","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","enclosesWeak","encloseBasis","encloseBasis1","r1","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","A","place","ax","ay","da","db","dc","intersects","score","Node$1","circle","previous","packEnclose","circles","aa","sj","sk","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$5","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$2","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$3","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","ox","oy","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","lineRadial","linkSource","linkTarget","link$2","link","buffer","argv","slice$6","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p1","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultTouchable$1","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection$$1","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchable","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition$$1","transition_on","transition_remove","transition_select","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","entries","createResult","setResult","sortValues","rollup","valuesByKey","sortKey","sortKeys","proto","EOL","EOF","QUOTE","NEWLINE","RETURN","dsv","delimiter","convert","parseRows","token","eof","eol","DELIMITER","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","weight","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","radiuses","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","sum$1","sinPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","extent$1","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","transform$$1","reflectX","reflectY","naturalEarth1","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","slice$3","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$4","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","sourceRandomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinal$$1","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRom$$1","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","Gesture","wheelidled","wheel","wheelDelta","wheelDelay","touch0","touch1","touchstarting","touchDelay","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceRadial","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoNaturalEarth1","geoNaturalEarth1Raw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleIdentity","scaleLog","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","mapdUI","skyBlue","VALUE","ID","LABEL","GROUP","VALUES","_toConsumableArray","arr2","_dataToClone","sortData","_keyType","sortedData","getTime","localeCompare","numeric","getUnique","invertScale","_mouseX","bandStep","accum","limit","wait","_len","_key","_len2","_key2","stringToType","str","converted","Number","Scale","buildXScale","_allKeys","buildYScale","_extent","buildColorScale","ids","getID","splitByGroups","allValues","allKeys","getValue","getKey","getStackedScales","allStackHeights","dB","allUniqueKeys","valuesExtent","getHorizontalScales","groupAxis1","groupAxis2","Line","drawLines","seriesLine","seriesLine2","getColor","drawAreas","seriesArea","seriesArea2","areas","drawStackedAreas","_scales","Bar","drawBars","bars","drawStackedBars","stackedBarGroups","stackedUpdate","stackedBars","Axis","formatXAxis","formatter","formatYAxis","yFormat","yExtent","buildAxis","isInteger","tickSpacing","y2Axis","horizontalGridLines","verticalGridLines","hoverZoneSize","background","isLegend","tooltipTitle","tooltipBody","calculateTooltipPosition","_mouseY","OFFSET","tooltipSize","tooltipX","avoidanceOffset","tooltipY","yPosition","drawContent","content","tooltipItems","tooltipItemsUpdate","tooltipItem","legendData","drawTitle","title","_typeof","setupContent","_series","sortByTopicsOrder","sortByAlpha","_order","orderName","_ref","hide","show","_shouldBeVisible","isEnabled","setupTooltip","_dataPoint","_xPosition","_yPosition","_calculateTooltipPosi","_calculateTooltipPosi2","_dispatcher","_title","_content","tooltipDivider","tooltipBackground","IS_LEGEND","buildBrush","handleBrushStart","handleBrushMove","handleBrushEnd","chartBrush","moveBrush","getDataExtent","dataExtent","validateExtent","_brushExtent","clampBrush","_dataExtent","brushExtent","_isEnabled","dateRange","drawHover","_dataPointXPosition","moveVerticalMarker","drawVerticalMarker","highlightStackedDataPoints","highlightDataPoints","dotsData","drawHighlightDataPoints","_dotsData","dots","stackedDataPoint","dotsStack","dot","verticalMarkerLine","_verticalMarkerXPosition","autoItem","isSelected","toggled","autoLabel","binningItems","LINE_HEIGHT","changeBinning","selectedBin","toggleAuto","isAuto","_selectedItemName","exclusiveToggle","_shouldBeSelected","_selectedBin","_isAuto","toggleOnOff","bool","shouldBeSelected","othersSelection","toggle","toggleOffIsEnabled","toggleMultipleIsEnabled","options","hasSelection","selectionNode","hasJustBeenClicked","blurOnEnter","blur","xFormatter","yFormatter","y2Formatter","xHitZone","showXEditor","hideXEditor","yHitZone","showYEditor","hideYEditor","y2HitZone","showY2Editor","hideY2Editor","yMaxInput","innerText","yMinInput","yLockIcon","isLocked","y2MaxInput","y2MinInput","y2LockIcon","xMinInput","xMaxInput","xLockIcon","HOVER_ZONE_SIZE","LOCK_SIZE","INPUT_HEIGHT","PADDING","INPUT_WIDTH","yLock","y2Lock","xLock","inputMax","rangeMax","inputMin","rangeMin","_rangeMin","_rangeMax","xAxisLabel","yAxisLabel","y2AxisLabel","textHeight","textWidth","_xLabel","_yLabel","_y2Label","generateRandomString","_length","substr","generateSeries","_dataKeys","_range","_allowNegative","variabilityRatio","randomWalkStepSize","rnd","generateTestDataset","dataKeys","baseDate","previousDate","DAY_IN_MS","pointCount","lineCount","groupCount","flatData","serie","_dataObject","keyFromInvertedX","dataEntryIndex","dataEntryForXPosition","dataEntryForXPositionPrev","nearestDataPoint","filterByKey","extentMinIndex","extentMaxIndex","filterByDate","_dateExtent","epoch","sub","pub","_channelName","_brushConfig","filtered"],"mappings":"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","file":"mapd3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mapd3\"] = factory();\n\telse\n\t\troot[\"mapd3\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.colors = exports.Interactors = exports.Hover = exports.Brush = exports.Label = exports.BrushRangeEditor = exports.DomainEditor = exports.Binning = exports.Observer = exports.DataManager = exports.Legend = exports.Tooltip = exports.Chart = undefined;\n\t\n\tvar _chart = __webpack_require__(1);\n\t\n\tvar _chart2 = _interopRequireDefault(_chart);\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(12);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _dataManager = __webpack_require__(20);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tvar _observer = __webpack_require__(21);\n\t\n\tvar _observer2 = _interopRequireDefault(_observer);\n\t\n\tvar _binning = __webpack_require__(15);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(17);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(18);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(19);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _brush = __webpack_require__(13);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(14);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tvar _interactors2 = _interopRequireDefault(_interactors);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Chart = _chart2.default;\n\texports.Tooltip = _tooltip2.default;\n\texports.Legend = _legend2.default;\n\texports.DataManager = _dataManager2.default;\n\texports.Observer = _observer2.default;\n\texports.Binning = _binning2.default;\n\texports.DomainEditor = _domainEditor2.default;\n\texports.BrushRangeEditor = _brushRangeEditor2.default;\n\texports.Label = _label2.default;\n\texports.Brush = _brush2.default;\n\texports.Hover = _hover2.default;\n\texports.Interactors = _interactors2.default;\n\texports.colors = _colors.colors;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = Chart;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _colors = __webpack_require__(4);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _scale = __webpack_require__(7);\n\t\n\tvar _scale2 = _interopRequireDefault(_scale);\n\t\n\tvar _line = __webpack_require__(8);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _bar = __webpack_require__(9);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _axis = __webpack_require__(10);\n\t\n\tvar _axis2 = _interopRequireDefault(_axis);\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _legend = __webpack_require__(12);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _brush = __webpack_require__(13);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _hover = __webpack_require__(14);\n\t\n\tvar _hover2 = _interopRequireDefault(_hover);\n\t\n\tvar _binning = __webpack_require__(15);\n\t\n\tvar _binning2 = _interopRequireDefault(_binning);\n\t\n\tvar _domainEditor = __webpack_require__(17);\n\t\n\tvar _domainEditor2 = _interopRequireDefault(_domainEditor);\n\t\n\tvar _brushRangeEditor = __webpack_require__(18);\n\t\n\tvar _brushRangeEditor2 = _interopRequireDefault(_brushRangeEditor);\n\t\n\tvar _label = __webpack_require__(19);\n\t\n\tvar _label2 = _interopRequireDefault(_label);\n\t\n\tvar _dataManager = __webpack_require__(20);\n\t\n\tvar _dataManager2 = _interopRequireDefault(_dataManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Chart(_container) {\n\t\n\t  var config = {\n\t    // common\n\t    margin: {\n\t      top: 48,\n\t      right: 32,\n\t      bottom: 48,\n\t      left: 32\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    chartType: \"line\", // line, area, stackedLine, stackedArea\n\t    ease: d3.easeLinear,\n\t\n\t    // intro animation\n\t    isAnimated: false,\n\t    animationDuration: 1500,\n\t\n\t    // scale\n\t    colorSchema: _colors.colors.mapdColors.map(function (d) {\n\t      return { value: d };\n\t    }),\n\t    defaultColor: \"skyblue\",\n\t    xDomain: \"auto\",\n\t    yDomain: \"auto\",\n\t    y2Domain: \"auto\",\n\t\n\t    // axis\n\t    tickPadding: 5,\n\t    xAxisFormat: \"auto\",\n\t    yAxisFormat: \".2f\",\n\t    y2AxisFormat: \".2f\",\n\t    tickSizes: 8,\n\t    yTicks: \"auto\",\n\t    y2Ticks: \"auto\",\n\t    xTickSkip: 0,\n\t    grid: null,\n\t    axisTransitionDuration: 0,\n\t\n\t    xTitle: \"\",\n\t    yTitle: \"\",\n\t\n\t    // hover\n\t    dotRadius: 4,\n\t\n\t    // tooltip\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t    seriesOrder: [],\n\t\n\t    // format\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\",\n\t\n\t    // legend\n\t    legendXPosition: \"auto\",\n\t    legendYPosition: \"auto\",\n\t    legendTitle: \"\",\n\t    legendIsEnabled: true,\n\t\n\t    // binning\n\t    binningResolution: \"1mo\",\n\t    binningIsAuto: true,\n\t    binningToggles: [\"10y\", \"1y\", \"1q\", \"1mo\"],\n\t    binningIsEnabled: true,\n\t\n\t    // domain\n\t    domainEditorIsEnabled: true,\n\t\n\t    // brush range\n\t    brushRangeMin: null,\n\t    brushRangeMax: null,\n\t    brushRangeIsEnabled: true,\n\t\n\t    // brush\n\t    brushIsEnabled: true,\n\t\n\t    // label\n\t    xLabel: \"\",\n\t    yLabel: \"\",\n\t    y2Label: \"\"\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    panel: null,\n\t    margin: null,\n\t    maskingRectangle: null,\n\t    chartWidth: null, chartHeight: null,\n\t    xAxis: null, yAxis: null, yAxis2: null\n\t  };\n\t\n\t  var dataObject = {\n\t    dataBySeries: null,\n\t    dataByKey: null,\n\t    data: null,\n\t    groupKeys: {},\n\t    hasSecondAxis: false,\n\t    stackData: null,\n\t    stack: null,\n\t    flatDataSorted: null\n\t  };\n\t\n\t  var components = {};\n\t  var eventCollector = {};\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\");\n\t  var dataManager = (0, _dataManager2.default)();\n\t\n\t  function render() {\n\t    buildSVG();\n\t\n\t    if (dataObject.dataBySeries) {\n\t      buildChart();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildSVG() {\n\t    var w = config.width === \"auto\" ? cache.container.clientWidth : config.width;\n\t    var h = config.height === \"auto\" ? cache.container.clientHeight : config.height;\n\t    cache.chartWidth = Math.max(w - config.margin.left - config.margin.right, 0);\n\t    cache.chartHeight = Math.max(h - config.margin.top - config.margin.bottom, 0);\n\t\n\t    if (!cache.svg) {\n\t      var template = \"<div class=\\\"mapd3 mapd3-container\\\">\\n        <div class=\\\"header-group\\\"></div>\\n        <svg class=\\\"chart\\\">\\n          <g class=\\\"chart-group\\\"></g>\\n          <g class=\\\"panel-group\\\">\\n            <rect class=\\\"panel-background\\\"></rect>\\n          </g>\\n          <rect class=\\\"masking-rectangle\\\"></rect>\\n        </svg>\\n      </div>\";\n\t\n\t      var base = d3.select(cache.container).html(template);\n\t\n\t      cache.container = base.select(\".mapd3-container\").style(\"position\", \"relative\");\n\t\n\t      cache.svg = base.select(\"svg\");\n\t      cache.headerGroup = base.select(\".header-group\").style(\"position\", \"absolute\");\n\t      cache.panel = cache.svg.select(\".panel-group\");\n\t      cache.chart = cache.svg.select(\".chart-group\");\n\t\n\t      addEvents();\n\t\n\t      Object.assign(components, {\n\t        scale: (0, _scale2.default)(),\n\t        axis: (0, _axis2.default)(cache.chart),\n\t        line: (0, _line2.default)(cache.panel),\n\t        bar: (0, _bar2.default)(cache.panel),\n\t        tooltip: (0, _tooltip2.default)(cache.container),\n\t        legend: (0, _legend2.default)(cache.container),\n\t        brush: (0, _brush2.default)(cache.panel),\n\t        hover: (0, _hover2.default)(cache.panel),\n\t        binning: (0, _binning2.default)(cache.headerGroup),\n\t        domainEditor: (0, _domainEditor2.default)(cache.container),\n\t        brushRangeEditor: (0, _brushRangeEditor2.default)(cache.headerGroup),\n\t        label: (0, _label2.default)(cache.container)\n\t      });\n\t\n\t      Object.assign(eventCollector, {\n\t        onBrush: (0, _common.rebind)(components.brush),\n\t        onHover: (0, _common.rebind)(components.hover),\n\t        onBinning: (0, _common.rebind)(components.binning),\n\t        onDomainEditor: (0, _common.rebind)(components.domainEditor),\n\t        onBrushRangeEditor: (0, _common.rebind)(components.brushRangeEditor),\n\t        onLabel: (0, _common.rebind)(components.label),\n\t        onPanel: (0, _common.rebind)(dispatcher)\n\t      });\n\t    }\n\t\n\t    cache.svg.attr(\"width\", config.width).attr(\"height\", config.height);\n\t\n\t    cache.headerGroup.style(\"width\", cache.chartWidth + \"px\").style(\"left\", config.margin.left + \"px\");\n\t\n\t    cache.panel.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\").select(\".panel-background\").attr(\"width\", cache.chartWidth).attr(\"height\", cache.chartHeight).attr(\"fill\", \"transparent\");\n\t\n\t    return this;\n\t  }\n\t\n\t  function buildChart() {\n\t    components.scale.setConfig(config).setData(dataObject);\n\t    scales = components.scale.getScales();\n\t\n\t    components.axis.setConfig(config).setScales(scales).drawAxis().drawGridLines();\n\t\n\t    components.line.setConfig(config).setScales(scales).setData(dataObject).drawMarks();\n\t\n\t    components.bar.setConfig(config).setScales(scales).setData(dataObject).drawMarks();\n\t\n\t    components.tooltip.setConfig(config).setScales(scales).bindEvents(dispatcher).setVisibility(config.tooltipIsEnabled);\n\t\n\t    var legendContent = dataObject.dataBySeries.map(function (d) {\n\t      return {\n\t        id: d.id,\n\t        key: d.key,\n\t        label: d.label\n\t      };\n\t    });\n\t\n\t    components.legend.setConfig(config).setScales(scales).setTitle(config.legendTitle).setContent(legendContent).setXPosition(config.legendXPosition).setYPosition(config.legendYPosition).drawTooltip().setVisibility(config.legendIsEnabled);\n\t\n\t    components.brush.setConfig(config).setScales(scales).setData(dataObject).setBrushExtent([config.brushRangeMin, config.brushRangeMax]).setVisibility(config.brushIsEnabled).drawBrush();\n\t\n\t    components.hover.setConfig(config).setScales(scales).setData(dataObject).bindEvents(dispatcher);\n\t\n\t    components.binning.setConfig(config).setBinning(config.binningResolution).setAuto(config.binningIsAuto).drawBinning().setVisibility(config.binningIsEnabled);\n\t\n\t    components.domainEditor.setConfig(config).setScales(scales).drawDomainEditor().setVisibility(config.domainEditorIsEnabled);\n\t\n\t    components.brushRangeEditor.setConfig(config).setScales(scales).setRangeMin(config.brushRangeMin).setRangeMax(config.brushRangeMax).drawRangeEditor().setVisibility(config.brushRangeIsEnabled);\n\t\n\t    components.label.setConfig(config).setXLabels(config.xLabel).setYLabels(config.yLabel).setY2Labels(config.y2Label).drawLabels();\n\t\n\t    triggerIntroAnimation();\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    dataObject.data = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var cleanedData = dataManager.cleanData(_data, config.keyType);\n\t    Object.assign(dataObject, cleanedData);\n\t\n\t    render();\n\t    return this;\n\t  }\n\t\n\t  function triggerIntroAnimation() {\n\t    if (config.isAnimated) {\n\t      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\").attr(\"width\", cache.chartWidth - 2).attr(\"height\", cache.chartHeight).attr(\"x\", config.margin.left + 1).attr(\"y\", config.margin.top);\n\t\n\t      cache.maskingRectangle.transition().duration(config.animationDuration).ease(config.ease).attr(\"width\", 0).attr(\"x\", config.width - config.margin.right).on(\"end\", function () {\n\t        return cache.maskingRectangle.remove();\n\t      });\n\t    }\n\t  }\n\t\n\t  function addEvents() {\n\t    var THROTTLE_DELAY = 20;\n\t    var throttledDispatch = (0, _common.throttle)(function () {\n\t      dispatcher.call.apply(dispatcher, arguments);\n\t    }, THROTTLE_DELAY);\n\t\n\t    cache.panel.on(\"mouseover.dispatch\", function () {\n\t      dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mouseout.dispatch\", function () {\n\t      dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()));\n\t    }).on(\"mousemove.dispatch\", function () {\n\t      var _d3$mouse = d3.mouse(cache.panel.node()),\n\t          _d3$mouse2 = _slicedToArray(_d3$mouse, 2),\n\t          mouseX = _d3$mouse2[0],\n\t          mouseY = _d3$mouse2[1];\n\t\n\t      if (!dataObject.data) {\n\t        return;\n\t      }\n\t      var xPosition = mouseX;\n\t      var dataPoint = dataManager.getNearestDataPoint(xPosition, dataObject, scales, config.keyType);\n\t\n\t      if (dataPoint) {\n\t        var dataPointXPosition = scales.xScale(dataPoint[_constants.keys.DATA]);\n\t        throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY);\n\t      }\n\t    });\n\t  }\n\t\n\t  function getEvents() {\n\t    if (!cache.svg) {\n\t      render();\n\t    }\n\t    return eventCollector;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.on(\".\", null).remove();\n\t  }\n\t\n\t  return {\n\t    render: render,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    on: on,\n\t    destroy: destroy,\n\t    getEvents: getEvents\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, \"axisBottom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisBottom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisLeft\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisLeft;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"axisRight\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.axisRight;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"utcFormat\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.utcFormat;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"format\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.format;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"bisector\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.bisector;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"extent\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.extent;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"sum\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.sum;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"range\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.range;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"merge\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.merge;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"nest\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.nest;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"dispatch\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.dispatch;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"easeQuadInOut\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.easeQuadInOut;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"select\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.select;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"mouse\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.mouse;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"event\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.event;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"transition\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.transition;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomUniform\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomUniform;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"randomNormal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.randomNormal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeDay\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeDay;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"timeMonth\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.timeMonth;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"area\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.area;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"curveCatmullRom\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.curveCatmullRom;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"line\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.line;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stack\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stack;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOffsetNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOffsetNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"stackOrderNone\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.stackOrderNone;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleTime\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleTime;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scalePoint\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scalePoint;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleBand\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleBand;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleLinear\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleLinear;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"scaleOrdinal\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.scaleOrdinal;\n\t\t}\n\t});\n\tObject.defineProperty(exports, \"brushX\", {\n\t\tenumerable: true,\n\t\tget: function get() {\n\t\t\treturn _d.brushX;\n\t\t}\n\t});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.11.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  stop = +stop, start = +start, count = +count;\n\t  if (start === stop && count > 0) return [start];\n\t  if (reverse = stop < start) n = start, start = stop, stop = n;\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number$1(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection$$1) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tfunction defaultTouchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      touchable = defaultTouchable,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = exports.event.clientX;\n\t    mousedowny = exports.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = exports.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n\t    schedule$$1.state = ENDED;\n\t    schedule$$1.timer.stop();\n\t    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule$$1 = set$1(this, id),\n\t        tween = schedule$$1.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule$$1.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule$$1 = set$1(this, id);\n\t    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition$$1) {\n\t  if (transition$$1._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule$$1 = sit(this, id),\n\t        on = schedule$$1.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule$$1.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = styleValue(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule$$1,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar EOL = {};\n\tvar EOF = {};\n\tvar QUOTE = 34;\n\tvar NEWLINE = 10;\n\tvar RETURN = 13;\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      DELIMITER = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // current line number\n\t        t, // current token\n\t        eof = N <= 0, // current token followed by EOF?\n\t        eol = false; // current token followed by EOL?\n\t\n\t    // Strip the trailing newline.\n\t    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n\t    if (text.charCodeAt(N - 1) === RETURN) --N;\n\t\n\t    function token() {\n\t      if (eof) return EOF;\n\t      if (eol) return eol = false, EOL;\n\t\n\t      // Unescape quotes.\n\t      var i, j = I, c;\n\t      if (text.charCodeAt(j) === QUOTE) {\n\t        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n\t        if ((i = I) >= N) eof = true;\n\t        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // Find next delimiter or newline.\n\t      while (I < N) {\n\t        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n\t        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n\t        else if (c !== DELIMITER) continue;\n\t        return text.slice(j, i);\n\t      }\n\t\n\t      // Return last token before EOF.\n\t      return eof = true, text.slice(j, N);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var row = [];\n\t      while (t !== EOL && t !== EOF) row.push(t), t = token();\n\t      if (f && (row = f(row, n++)) == null) continue;\n\t      rows.push(row);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, weight = 0, x, y, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x = y = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n\t          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x / weight;\n\t      quad.y = y / weight;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x = quad.x - node.x,\n\t        y = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x * x + y * y;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x * quad.value * alpha / l;\n\t        node.vy += y * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x === 0) x = jiggle(), l += x * x;\n\t      if (y === 0) y = jiggle(), l += y * y;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x * w;\n\t      node.vy += y * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar radial = function(radius, x, y) {\n\t  var nodes,\n\t      strength = constant$6(0.1),\n\t      strengths,\n\t      radiuses;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(+radius);\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length; i < n; ++i) {\n\t      var node = nodes[i],\n\t          dx = node.x - x || 1e-6,\n\t          dy = node.y - y || 1e-6,\n\t          r = Math.sqrt(dx * dx + dy * dy),\n\t          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n\t      node.vx += dx * k;\n\t      node.vy += dy * k;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    radiuses = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      radiuses[i] = +radius(nodes[i], i, nodes);\n\t      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _, initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(sink) {\n\t    var line = clipLine(sink),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, start);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      line.point(lambda, phi);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      ringSink.point(lambda, phi);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius) {\n\t  var cr = cos$1(radius),\n\t      delta = 6 * radians,\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipRectangle(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _radius: 4.5,\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n\t    return this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        if (this._circle == null) this._circle = circle$1(this._radius);\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction transformRotate(rotate) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      var r = rotate(x, y);\n\t      return this.stream.point(r[0], r[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n\t  };\n\t\n\t  projection.preclip = function(_) {\n\t    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n\t  };\n\t\n\t  projection.postclip = function(_) {\n\t    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, // clip extent\n\t      postclip = identity$4,\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n\t    },\n\t    postclip: function(_) {\n\t      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction naturalEarth1Raw(lambda, phi) {\n\t  var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t  return [\n\t    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n\t    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n\t  ];\n\t}\n\t\n\tnaturalEarth1Raw.invert = function(x, y) {\n\t  var phi = y, i = 25, delta;\n\t  do {\n\t    var phi2 = phi * phi, phi4 = phi2 * phi2;\n\t    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n\t        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n\t  } while (abs(delta) > epsilon$2 && --i > 0);\n\t  return [\n\t    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n\t    phi\n\t  ];\n\t};\n\t\n\tvar naturalEarth1 = function() {\n\t  return projection(naturalEarth1Raw)\n\t      .scale(175.295);\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tvar slice$3 = Array.prototype.slice;\n\t\n\tfunction shuffle$1(array) {\n\t  var m = array.length,\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m];\n\t    array[m] = array[i];\n\t    array[i] = t;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar enclose = function(circles) {\n\t  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\t\n\t  while (i < n) {\n\t    p = circles[i];\n\t    if (e && enclosesWeak(e, p)) ++i;\n\t    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n\t  }\n\t\n\t  return e;\n\t};\n\t\n\tfunction extendBasis(B, p) {\n\t  var i, j;\n\t\n\t  if (enclosesWeakAll(p, B)) return [p];\n\t\n\t  // If we get here then B must have at least one element.\n\t  for (i = 0; i < B.length; ++i) {\n\t    if (enclosesNot(p, B[i])\n\t        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n\t      return [B[i], p];\n\t    }\n\t  }\n\t\n\t  // If we get here then B must have at least two elements.\n\t  for (i = 0; i < B.length - 1; ++i) {\n\t    for (j = i + 1; j < B.length; ++j) {\n\t      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n\t          && enclosesNot(encloseBasis2(B[i], p), B[j])\n\t          && enclosesNot(encloseBasis2(B[j], p), B[i])\n\t          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n\t        return [B[i], B[j], p];\n\t      }\n\t    }\n\t  }\n\t\n\t  // If we get here then something is very wrong.\n\t  throw new Error;\n\t}\n\t\n\tfunction enclosesNot(a, b) {\n\t  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr < 0 || dr * dr < dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeak(a, b) {\n\t  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n\t  return dr > 0 && dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction enclosesWeakAll(a, B) {\n\t  for (var i = 0; i < B.length; ++i) {\n\t    if (!enclosesWeak(a, B[i])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction encloseBasis(B) {\n\t  switch (B.length) {\n\t    case 1: return encloseBasis1(B[0]);\n\t    case 2: return encloseBasis2(B[0], B[1]);\n\t    case 3: return encloseBasis3(B[0], B[1], B[2]);\n\t  }\n\t}\n\t\n\tfunction encloseBasis1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction encloseBasis2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction encloseBasis3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = x1 - x2,\n\t      a3 = x1 - x3,\n\t      b2 = y1 - y2,\n\t      b3 = y1 - y3,\n\t      c2 = r2 - r1,\n\t      c3 = r3 - r1,\n\t      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n\t      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (r1 + xa * xb + ya * yb),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n\t  return {\n\t    x: x1 + xa + xb * r,\n\t    y: y1 + ya + yb * r,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction score(node) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab,\n\t      dy = (a.y * b.r + b.y * a.r) / ab;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = score(a);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = score(c)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$4 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"defer after await\");\n\t    if (this._error != null) return this;\n\t    var t = slice$4.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n\t    if (this._call) throw new Error(\"multiple await\");\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  if (concurrency == null) concurrency = Infinity;\n\t  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n\t  return new Queue(concurrency);\n\t}\n\t\n\tvar defaultSource$1 = function() {\n\t  return Math.random();\n\t};\n\t\n\tvar uniform = (function sourceRandomUniform(source) {\n\t  function randomUniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return source() * max + min;\n\t    };\n\t  }\n\t\n\t  randomUniform.source = sourceRandomUniform;\n\t\n\t  return randomUniform;\n\t})(defaultSource$1);\n\t\n\tvar normal = (function sourceRandomNormal(source) {\n\t  function randomNormal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = source() * 2 - 1;\n\t        y = source() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  randomNormal.source = sourceRandomNormal;\n\t\n\t  return randomNormal;\n\t})(defaultSource$1);\n\t\n\tvar logNormal = (function sourceRandomLogNormal(source) {\n\t  function randomLogNormal() {\n\t    var randomNormal = normal.source(source).apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  randomLogNormal.source = sourceRandomLogNormal;\n\t\n\t  return randomLogNormal;\n\t})(defaultSource$1);\n\t\n\tvar irwinHall = (function sourceRandomIrwinHall(source) {\n\t  function randomIrwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  randomIrwinHall.source = sourceRandomIrwinHall;\n\t\n\t  return randomIrwinHall;\n\t})(defaultSource$1);\n\t\n\tvar bates = (function sourceRandomBates(source) {\n\t  function randomBates(n) {\n\t    var randomIrwinHall = irwinHall.source(source)(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  randomBates.source = sourceRandomBates;\n\t\n\t  return randomBates;\n\t})(defaultSource$1);\n\t\n\tvar exponential$1 = (function sourceRandomExponential(source) {\n\t  function randomExponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - source()) / lambda;\n\t    };\n\t  }\n\t\n\t  randomExponential.source = sourceRandomExponential;\n\t\n\t  return randomExponential;\n\t})(defaultSource$1);\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$5 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$5.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$2 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range = range.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range[i], range[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$1 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$3(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice$6 = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link$2(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link$2(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link$2(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link$2(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal$$1(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal$$1.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal$$1;\n\t})(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom$$1(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom$$1.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom$$1;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tfunction defaultWheelDelta() {\n\t  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n\t}\n\t\n\tfunction defaultTouchable$1() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      wheelDelta = defaultWheelDelta,\n\t      touchable = defaultTouchable$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150,\n\t      clickDistance2 = 0;\n\t\n\t  function zoom(selection) {\n\t    selection\n\t        .property(\"__zoom\", defaultTransform)\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t      .filter(touchable)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  zoom.transform = function(collection, transform$$1) {\n\t    var selection = collection.selection ? collection.selection() : collection;\n\t    selection.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection) {\n\t      schedule(collection, transform$$1);\n\t    } else {\n\t      selection.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection, k) {\n\t    zoom.scaleTo(selection, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection, k) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  zoom.translateTo = function(selection, x, y) {\n\t    zoom.transform(selection, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t = this.__zoom,\n\t          p = centroid(e);\n\t      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n\t        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n\t        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n\t      ), e);\n\t    });\n\t  };\n\t\n\t  function scale(transform$$1, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n\t  }\n\t\n\t  function translate(transform$$1, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n\t    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n\t  }\n\t\n\t  function constrain(transform$$1, extent) {\n\t    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n\t        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n\t        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n\t        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n\t    return transform$$1.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition, transform$$1, center) {\n\t    transition\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n\t              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform$$1) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n\t      this.that.__zoom = transform$$1;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this),\n\t        x0 = exports.event.clientX,\n\t        y0 = exports.event.clientY;\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      if (!g.moved) {\n\t        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n\t        g.moved = dx * dx + dy * dy > clickDistance2;\n\t      }\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        started,\n\t        n = touches.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i], p = touch(this, touches, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches = exports.event.changedTouches,\n\t        n = touches.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.wheelDelta = function(_) {\n\t    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n\t  };\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.touchable = function(_) {\n\t    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate = _, zoom) : interpolate;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  zoom.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceRadial = radial;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipAntimeridian = clipAntimeridian;\n\texports.geoClipCircle = clipCircle;\n\texports.geoClipExtent = extent$1;\n\texports.geoClipRectangle = clipRectangle;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoNaturalEarth1 = naturalEarth1;\n\texports.geoNaturalEarth1Raw = naturalEarth1Raw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar mapdUI = exports.mapdUI = {\n\t  skyBlue: \"#22A7F0\"\n\t};\n\t\n\tvar mapdColors = exports.mapdColors = [\"#ea5545\", \"#bdcf32\", \"#b33dc6\", \"#ef9b20\", \"#87bc45\", \"#f46a9b\", \"#ace5c7\", \"#ede15b\", \"#836dc5\", \"#86d87f\", \"#27aeef\"];\n\t\n\tvar grey = exports.grey = [\"#F8F8FA\", \"#EFF2F5\", \"#D2D6DF\", \"#C3C6CF\", \"#ADB0B6\", \"#666A73\", \"#45494E\", \"#363A43\", \"#282C35\"];\n\t\n\tvar colors = exports.colors = {\n\t  mapdUI: mapdUI,\n\t  mapdColors: mapdColors,\n\t  grey: grey\n\t};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar keys = exports.keys = {\n\t  DATA: \"key\",\n\t  VALUE: \"value\",\n\t  ID: \"id\",\n\t  LABEL: \"label\",\n\t  GROUP: \"group\",\n\t  VALUES: \"values\",\n\t  SERIES: \"series\"\n\t};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cloneData = cloneData;\n\texports.sortData = sortData;\n\texports.getUnique = getUnique;\n\texports.invertScale = invertScale;\n\texports.override = override;\n\texports.throttle = throttle;\n\texports.rebind = rebind;\n\texports.stringToType = stringToType;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Clones the passed array of data\n\t * @param  {Object[]} dataToClone Data to clone\n\t * @return {Object[]}             Cloned data\n\t */\n\tfunction cloneData(_dataToClone) {\n\t  return JSON.parse(JSON.stringify(_dataToClone));\n\t}\n\t\n\tfunction sortData(_data, _keyType) {\n\t  var sortedData = cloneData(_data);\n\t  if (_keyType === \"time\") {\n\t    sortedData.forEach(function (d) {\n\t      d[_constants.keys.DATA] = new Date(d[_constants.keys.DATA]);\n\t    });\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].getTime() - b[_constants.keys.DATA].getTime();\n\t    });\n\t  } else if (_keyType === \"string\") {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA].localeCompare(b[_constants.keys.DATA], \"en\", { numeric: false });\n\t    });\n\t  } else {\n\t    sortedData.sort(function (a, b) {\n\t      return a[_constants.keys.DATA] - b[_constants.keys.DATA];\n\t    });\n\t  }\n\t  return sortedData;\n\t}\n\t\n\tfunction getUnique(arr) {\n\t  return [].concat(_toConsumableArray(new Set(arr)));\n\t}\n\t\n\tfunction invertScale(_scale, _mouseX, _keyType) {\n\t  if (_keyType === \"time\" || _keyType === \"number\") {\n\t    return _scale.invert(_mouseX);\n\t  } else {\n\t    var bandStep = _scale.step();\n\t    var index = Math.round(_mouseX / bandStep);\n\t    return _scale.domain()[index];\n\t  }\n\t}\n\t\n\tfunction override(a, b) {\n\t  var accum = {};\n\t  for (var x in a) {\n\t    if (a.hasOwnProperty(x)) {\n\t      accum[x] = x in b ? b[x] : a[x];\n\t    }\n\t  }\n\t  return accum;\n\t}\n\t\n\tfunction throttle(callback, limit) {\n\t  var wait = false;\n\t  var timer = null;\n\t  return function throttleFn() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    if (!wait) {\n\t      wait = true;\n\t      clearTimeout(timer);\n\t      timer = setTimeout(function () {\n\t        wait = false;\n\t        callback.apply(undefined, args);\n\t      }, limit);\n\t    }\n\t  };\n\t}\n\t\n\tfunction rebind(target) {\n\t  return function reapply() {\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\t\n\t    target.on.apply(target, [args[0] + \".rebind\"].concat(_toConsumableArray(args.slice(1))));\n\t    return this;\n\t  };\n\t}\n\t\n\tfunction stringToType(str, type) {\n\t  var converted = str;\n\t  if (type === \"time\") {\n\t    converted = new Date(str);\n\t  } else if (type === \"number\") {\n\t    converted = Number(str);\n\t  }\n\t  return converted;\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Scale;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Scale() {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    height: null,\n\t    width: null,\n\t    keyType: null,\n\t    chartType: null,\n\t    colorSchema: null,\n\t    defaultColor: null,\n\t    xDomain: \"auto\",\n\t    yDomain: \"auto\",\n\t    y2Domain: \"auto\"\n\t  };\n\t\n\t  var data = {\n\t    dataByKey: null,\n\t    dataBySeries: null,\n\t    flatDataSorted: null,\n\t    groupKeys: null\n\t  };\n\t\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t  var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getValue = function getValue(d) {\n\t    return d[_constants.keys.VALUE];\n\t  };\n\t\n\t  function buildXScale(_allKeys) {\n\t    var chartWidth = config.width - config.margin.left - config.margin.right;\n\t    var xScale = null;\n\t    var domain = null;\n\t\n\t    if (config.keyType === \"time\") {\n\t      xScale = d3.scaleTime();\n\t    } else if (config.keyType === \"number\") {\n\t      xScale = d3.scaleLinear();\n\t    } else {\n\t      xScale = config.chartType === \"bar\" || config.chartType === \"stackedBar\" ? d3.scaleBand() : d3.scalePoint();\n\t      xScale.padding(0);\n\t    }\n\t\n\t    if (config.xDomain === \"auto\") {\n\t      if (config.keyType === \"string\") {\n\t        domain = _allKeys;\n\t      } else {\n\t        domain = d3.extent(_allKeys);\n\t      }\n\t    } else {\n\t      domain = config.xDomain;\n\t    }\n\t\n\t    xScale.domain(domain).range([0, chartWidth]);\n\t\n\t    return xScale;\n\t  }\n\t\n\t  function buildYScale(_extent) {\n\t    var chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var yScale = d3.scaleLinear().domain(_extent).rangeRound([chartHeight, 0]).nice();\n\t\n\t    return yScale;\n\t  }\n\t\n\t  function buildColorScale() {\n\t    var ids = data.dataBySeries.map(getID);\n\t    var colorScale = d3.scaleOrdinal().range(config.colorSchema.map(function (d) {\n\t      return d.value;\n\t    })).domain(config.colorSchema.map(function (d, i) {\n\t      return d.key || ids[i];\n\t    })).unknown(config.defaultColor);\n\t\n\t    return colorScale;\n\t  }\n\t\n\t  function splitByGroups() {\n\t    var groups = {};\n\t    data.dataBySeries.forEach(function (d) {\n\t      var key = d[_constants.keys.GROUP];\n\t      if (!groups[key]) {\n\t        groups[key] = {\n\t          allValues: [],\n\t          allKeys: []\n\t        };\n\t      }\n\t      groups[key].allValues = groups[key].allValues.concat(d[_constants.keys.VALUES].map(getValue));\n\t      groups[key].allKeys = groups[key].allKeys.concat(d[_constants.keys.VALUES].map(getKey));\n\t    });\n\t\n\t    return groups;\n\t  }\n\t\n\t  function getStackedScales() {\n\t    var allStackHeights = data.dataByKey.map(function (d) {\n\t      return d3.sum(d.series.map(function (dB) {\n\t        return dB.value;\n\t      }));\n\t    });\n\t\n\t    var allKeys = data.flatDataSorted.map(getKey);\n\t    var allUniqueKeys = (0, _common.getUnique)(allKeys);\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t\n\t    var yDomain = null;\n\t    if (config.yDomain === \"auto\") {\n\t      var valuesExtent = d3.extent(allStackHeights);\n\t      yDomain = [0, valuesExtent[1]];\n\t    } else {\n\t      yDomain = config.yDomain;\n\t    }\n\t    var yScale = buildYScale(yDomain);\n\t\n\t    return {\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getHorizontalScales() {\n\t    var groups = splitByGroups();\n\t\n\t    var hasSecondAxis = Object.keys(data.groupKeys).length > 1;\n\t\n\t    var groupAxis1 = groups[0];\n\t    var allUniqueKeys = groupAxis1.allKeys;\n\t\n\t    var xScale = buildXScale(allUniqueKeys);\n\t    var colorScale = buildColorScale();\n\t\n\t    var yDomain = null;\n\t    if (config.yDomain === \"auto\") {\n\t      yDomain = d3.extent(groupAxis1.allValues);\n\t    } else {\n\t      yDomain = config.yDomain;\n\t    }\n\t    var yScale = buildYScale(yDomain);\n\t\n\t    var y2Scale = null;\n\t    if (hasSecondAxis) {\n\t      var y2Domain = null;\n\t      if (config.y2Domain === \"auto\") {\n\t        var groupAxis2 = groups[1];\n\t        y2Domain = d3.extent(groupAxis2.allValues);\n\t      } else {\n\t        y2Domain = config.y2Domain;\n\t      }\n\t\n\t      y2Scale = yScale.copy().domain(y2Domain);\n\t    }\n\t\n\t    return {\n\t      hasSecondAxis: hasSecondAxis,\n\t      xScale: xScale,\n\t      yScale: yScale,\n\t      y2Scale: y2Scale,\n\t      colorScale: colorScale\n\t    };\n\t  }\n\t\n\t  function getScales() {\n\t    if (config.chartType === \"stackedBar\" || config.chartType === \"stackedArea\") {\n\t      return getStackedScales();\n\t    } else {\n\t      return getHorizontalScales();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    getScales: getScales\n\t  };\n\t}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Line;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Line(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawLines() {\n\t    var seriesLine = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    });\n\t\n\t    var seriesLine2 = d3.line().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y(function (d) {\n\t      return scales.y2Scale(d[_constants.keys.VALUE]);\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var lines = cache.svg.selectAll(\".mark\").data(data.dataBySeries);\n\t\n\t    lines.enter().append(\"path\").merge(lines).attr(\"class\", \"mark line\").classed(\"y2-line\", function (d) {\n\t      return d[_constants.keys.GROUP] > 0;\n\t    }).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return seriesLine(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesLine2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", \"none\");\n\t\n\t    lines.exit().remove();\n\t  }\n\t\n\t  function drawAreas() {\n\t    var seriesArea = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return cache.chartHeight;\n\t    });\n\t\n\t    var seriesArea2 = d3.area().x(function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.y2Scale(d[_constants.keys.VALUE]);\n\t    }).y1(function () {\n\t      return cache.chartHeight;\n\t    }).curve(d3.curveCatmullRom);\n\t\n\t    var areas = cache.svg.selectAll(\".mark\").data(data.dataBySeries);\n\t\n\t    areas.enter().append(\"path\").merge(areas).attr(\"class\", \"mark area\").classed(\"y2-area\", function (d) {\n\t      return d[_constants.keys.GROUP] > 0;\n\t    }).attr(\"d\", function (d) {\n\t      if (d[_constants.keys.GROUP] === 0) {\n\t        return seriesArea(d[_constants.keys.VALUES]);\n\t      } else {\n\t        return seriesArea2(d[_constants.keys.VALUES]);\n\t      }\n\t    }).style(\"stroke\", getColor).style(\"fill\", getColor);\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawStackedAreas() {\n\t    var seriesLine = d3.area().x(function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).y0(function (d) {\n\t      return scales.yScale(d[0]);\n\t    }).y1(function (d) {\n\t      return scales.yScale(d[1]);\n\t    });\n\t\n\t    var areas = cache.svg.selectAll(\".mark\").data(data.stack(data.stackData));\n\t\n\t    areas.enter().append(\"path\").merge(areas).attr(\"class\", \"mark stacked-area\").attr(\"d\", seriesLine).style(\"stroke\", \"none\").style(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    });\n\t\n\t    areas.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"area\") {\n\t      drawAreas();\n\t    } else if (config.chartType === \"line\") {\n\t      drawLines();\n\t    } else if (config.chartType === \"stackedArea\") {\n\t      drawStackedAreas();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Bar;\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction Bar(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null,\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartHeight: null\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null,\n\t    groupKeys: null,\n\t    stack: null,\n\t    stackData: null\n\t  };\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"mark-group\", true);\n\t    }\n\t  }\n\t\n\t  function drawBars() {\n\t    var bars = cache.svg.selectAll(\".mark\").data(data.dataBySeries[0].values);\n\t\n\t    bars.enter().append(\"rect\").attr(\"class\", \"mark rect\").merge(bars).attr(\"x\", function (d) {\n\t      return scales.xScale(d[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return scales.yScale(d[_constants.keys.VALUE]);\n\t    }).attr(\"width\", function () {\n\t      return scales.xScale.bandwidth();\n\t    }).attr(\"height\", function (d) {\n\t      return cache.chartHeight - scales.yScale(d[_constants.keys.VALUE]);\n\t    }).style(\"stroke\", \"white\").style(\"fill\", getColor);\n\t\n\t    bars.exit().remove();\n\t  }\n\t\n\t  function drawStackedBars() {\n\t\n\t    var stackedBarGroups = cache.svg.selectAll(\".bar-group\").data(data.stack(data.stackData));\n\t\n\t    var stackedUpdate = stackedBarGroups.enter().append(\"g\").attr(\"class\", \"bar-group\").merge(stackedBarGroups).attr(\"fill\", function (d) {\n\t      return scales.colorScale(d.key);\n\t    }).attr(\"stroke\", \"white\");\n\t\n\t    stackedBarGroups.exit().remove();\n\t\n\t    var stackedBars = stackedUpdate.selectAll(\".mark\").data(function (d) {\n\t      return d;\n\t    });\n\t\n\t    stackedBars.enter().append(\"rect\").attr(\"class\", \"mark\").merge(stackedBars).attr(\"x\", function (d) {\n\t      return scales.xScale(d.data[_constants.keys.DATA]);\n\t    }).attr(\"y\", function (d) {\n\t      return scales.yScale(d[1]);\n\t    }).attr(\"height\", function (d) {\n\t      return scales.yScale(d[0]) - scales.yScale(d[1]);\n\t    }).attr(\"width\", scales.xScale.bandwidth());\n\t\n\t    stackedBars.exit().remove();\n\t  }\n\t\n\t  function drawMarks() {\n\t    buildSVG();\n\t\n\t    if (config.chartType === \"bar\") {\n\t      drawBars();\n\t    } else if (config.chartType === \"stackedBar\") {\n\t      drawStackedBars();\n\t    }\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    drawMarks: drawMarks\n\t  };\n\t}\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Axis;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Axis(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    tickSizes: null,\n\t    tickPadding: null,\n\t    xAxisFormat: null,\n\t    yAxisFormat: null,\n\t    y2AxisFormat: null,\n\t    keyType: null,\n\t    yTicks: null,\n\t    y2Ticks: null,\n\t    xTickSkip: null,\n\t    axisTransitionDuration: null,\n\t    ease: null,\n\t    grid: null,\n\t    hoverZoneSize: 30,\n\t    tickSpacing: 40,\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\"\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    background: null,\n\t    chartHeight: null,\n\t    chartWidth: null,\n\t    xAxis: null,\n\t    yAxis: null,\n\t    y2Axis: null,\n\t    horizontalGridLines: null,\n\t    verticalGridLines: null\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"axis-group\", true).style(\"pointer-events\", \"none\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis x\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y\");\n\t\n\t      cache.svg.append(\"g\").attr(\"class\", \"axis y2\");\n\t    }\n\t\n\t    cache.svg.attr(\"transform\", \"translate(\" + config.margin.left + \", \" + config.margin.top + \")\");\n\t  }\n\t\n\t  function formatXAxis() {\n\t    if (config.keyType === \"time\") {\n\t      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n\t        var formatter = d3.timeFormat(config.xAxisFormat);\n\t        cache.xAxis.tickFormat(formatter);\n\t      }\n\t    } else if (config.keyType === \"string\") {\n\t      cache.xAxis.tickValues(scales.xScale.domain().filter(function (d, i) {\n\t        return !(i % config.xTickSkip);\n\t      }));\n\t    } else if (config.keyType === \"number\") {\n\t      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n\t        var _formatter = d3.format(config.xAxisFormat);\n\t        cache.xAxis.tickFormat(_formatter);\n\t      }\n\t    }\n\t  }\n\t\n\t  function formatYAxis(axis) {\n\t    if (config.yAxisFormat === \"auto\") {\n\t      var yFormat = config.numberFormat;\n\t      var yExtent = scales.yScale.domain();\n\t      if (yExtent[1] - yExtent[0] > 10000) {\n\t        yFormat = \".0s\";\n\t      } else if (yExtent[1] - yExtent[0] > 1000) {\n\t        yFormat = \".2s\";\n\t      }\n\t      axis.tickFormat(d3.format(yFormat));\n\t    } else if (typeof config.yAxisFormat === \"string\") {\n\t      axis.tickFormat(d3.format(config.yAxisFormat));\n\t    }\n\t  }\n\t\n\t  function buildAxis() {\n\t    cache.xAxis = d3.axisBottom(scales.xScale).tickSize(config.tickSizes, 0).tickPadding(config.tickPadding);\n\t\n\t    formatXAxis();\n\t\n\t    cache.yAxis = d3.axisLeft(scales.yScale).tickSize([config.tickSizes]).tickPadding(config.tickPadding);\n\t\n\t    formatYAxis(cache.yAxis);\n\t\n\t    if (Number.isInteger(config.yTicks)) {\n\t      cache.yAxis.ticks(config.yTicks);\n\t    } else {\n\t      cache.yAxis.ticks(Math.ceil(cache.chartHeight / config.tickSpacing));\n\t    }\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.y2Axis = d3.axisRight(scales.y2Scale).tickSize([config.tickSizes]).tickPadding(config.tickPadding);\n\t\n\t      formatYAxis(cache.y2Axis);\n\t\n\t      if (!isNaN(config.y2Ticks)) {\n\t        cache.y2Axis.ticks(config.y2Ticks);\n\t      }\n\t    }\n\t  }\n\t\n\t  function drawAxis() {\n\t    buildSVG();\n\t    buildAxis();\n\t\n\t    cache.svg.select(\".axis.x\").attr(\"transform\", \"translate(0, \" + cache.chartHeight + \")\").call(cache.xAxis);\n\t\n\t    cache.svg.select(\".axis.y\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.yAxis);\n\t\n\t    if (scales.hasSecondAxis) {\n\t      cache.svg.select(\".axis.y2\").attr(\"transform\", \"translate(\" + cache.chartWidth + \", 0)\").transition().duration(config.axisTransitionDuration).ease(config.ease).call(cache.y2Axis);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function drawGridLines() {\n\t    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n\t      var ticks = null;\n\t      if (Number.isInteger(config.yTicks)) {\n\t        ticks = config.yTicks;\n\t      } else {\n\t        ticks = Math.ceil(cache.chartHeight / config.tickSpacing);\n\t      }\n\t\n\t      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.horizontal-grid-line\").data(scales.yScale.ticks(ticks));\n\t\n\t      cache.horizontalGridLines.enter().append(\"line\").attr(\"class\", \"horizontal-grid-line\").merge(cache.horizontalGridLines).transition().duration(config.axisTransitionDuration).attr(\"x2\", cache.chartWidth).attr(\"y1\", scales.yScale).attr(\"y2\", scales.yScale);\n\t\n\t      cache.horizontalGridLines.exit().remove();\n\t    }\n\t\n\t    if (config.grid === \"vertical\" || config.grid === \"full\") {\n\t      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\").selectAll(\"line.vertical-grid-line\").data(cache.xAxis.tickValues());\n\t\n\t      cache.verticalGridLines.enter().append(\"line\").attr(\"class\", \"vertical-grid-line\").merge(cache.verticalGridLines).transition().duration(config.axisTransitionDuration).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight).attr(\"x1\", scales.xScale).attr(\"x2\", scales.xScale);\n\t\n\t      cache.verticalGridLines.exit().remove();\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    drawAxis: drawAxis,\n\t    drawGridLines: drawGridLines\n\t  };\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.default = Tooltip;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Tooltip(_container) {\n\t  var isLegend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\t\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 2,\n\t      right: 2,\n\t      bottom: 2,\n\t      left: 2\n\t    },\n\t    width: 250,\n\t    height: 45,\n\t\n\t    // Animations\n\t    mouseChaseDuration: 0,\n\t    tooltipEase: d3.easeQuadInOut,\n\t\n\t    tooltipHeight: 48,\n\t    tooltipWidth: 160,\n\t\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\",\n\t    seriesOrder: [],\n\t\n\t    // from chart\n\t    keyType: \"time\"\n\t  };\n\t\n\t  var scales = {\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    tooltipDivider: null,\n\t    tooltipBody: null,\n\t    tooltipTitle: null,\n\t    tooltipBackground: null,\n\t    xPosition: null,\n\t    yPosition: null,\n\t    content: null,\n\t    title: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", isLegend ? \"legend-group\" : \"tooltip-group\").style(\"position\", \"absolute\").style(\"pointer-events\", \"none\");\n\t\n\t      cache.tooltipTitle = cache.root.append(\"div\").attr(\"class\", \"tooltip-title\");\n\t\n\t      cache.tooltipBody = cache.root.append(\"div\").attr(\"class\", \"tooltip-body\");\n\t    }\n\t  }\n\t\n\t  function calculateTooltipPosition(_mouseX, _mouseY) {\n\t    var OFFSET = 4;\n\t    var tooltipSize = cache.root.node().getBoundingClientRect();\n\t    var tooltipX = _mouseX;\n\t    var avoidanceOffset = OFFSET;\n\t    var tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2;\n\t\n\t    if (_mouseX > cache.chartWidth / 2) {\n\t      avoidanceOffset = -tooltipSize.width - OFFSET;\n\t    }\n\t    return [tooltipX + avoidanceOffset, tooltipY];\n\t  }\n\t\n\t  function move() {\n\t    var xPosition = cache.xPosition === \"auto\" ? cache.chartWidth : cache.xPosition;\n\t\n\t    var yPosition = cache.yPosition === \"auto\" ? config.margin.top : cache.yPosition;\n\t\n\t    cache.root.transition().duration(config.mouseChaseDuration).ease(config.tooltipEase).style(\"top\", yPosition + \"px\").style(\"left\", function left() {\n\t      var width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0;\n\t      return xPosition + config.margin.left - width + \"px\";\n\t    });\n\t    return this;\n\t  }\n\t\n\t  function drawContent() {\n\t    var content = cache.content;\n\t    var formatter = d3.format(config.numberFormat);\n\t\n\t    var tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\").data(content);\n\t    var tooltipItemsUpdate = tooltipItems.enter().append(\"div\").attr(\"class\", \"tooltip-item\").merge(tooltipItems);\n\t    tooltipItems.exit().remove();\n\t\n\t    var tooltipItem = tooltipItemsUpdate.selectAll(\".section\").data(function (d) {\n\t      var legendData = [{ key: \"tooltip-color\", value: scales.colorScale(d[_constants.keys.ID]) }, { key: \"tooltip-label\", value: d[_constants.keys.LABEL] }];\n\t      if (typeof d[_constants.keys.VALUE] !== \"undefined\") {\n\t        legendData.push({ key: \"value\", value: d[_constants.keys.VALUE] });\n\t      }\n\t      return legendData;\n\t    });\n\t    tooltipItem.enter().append(\"div\").merge(tooltipItem).attr(\"class\", function (d) {\n\t      return [\"section\", d.key].join(\" \");\n\t    }).each(function each(d) {\n\t      var selection = d3.select(this);\n\t      if (d.key === \"tooltip-color\") {\n\t        selection.style(\"background\", d.value);\n\t      } else if (d.key === \"value\") {\n\t        selection.html(formatter(d.value));\n\t      } else {\n\t        selection.html(d.value);\n\t      }\n\t    });\n\t    tooltipItem.exit().remove();\n\t    return this;\n\t  }\n\t\n\t  function drawTitle() {\n\t    var title = cache.title;\n\t\n\t    if ((typeof title === \"undefined\" ? \"undefined\" : _typeof(title)) === \"object\") {\n\t      title = d3.timeFormat(config.dateFormat)(title);\n\t    }\n\t\n\t    cache.tooltipTitle.html(title);\n\t    return this;\n\t  }\n\t\n\t  function drawTooltip() {\n\t    buildSVG();\n\t    drawTitle();\n\t    drawContent();\n\t    move();\n\t    return this;\n\t  }\n\t\n\t  function setupContent(_series) {\n\t    var series = _series;\n\t\n\t    if (config.seriesOrder.length) {\n\t      series = sortByTopicsOrder(_series);\n\t    } else if (_series.length && _series[0][_constants.keys.LABEL]) {\n\t      series = sortByAlpha(_series);\n\t    }\n\t\n\t    cache.content = series;\n\t    return this;\n\t  }\n\t\n\t  function sortByTopicsOrder(_series) {\n\t    var _order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesOrder;\n\t\n\t    return _order.map(function (orderName) {\n\t      return _series.filter(function (_ref) {\n\t        var name = _ref.name;\n\t        return name === orderName;\n\t      })[0];\n\t    });\n\t  }\n\t\n\t  function sortByAlpha(_series) {\n\t    var series = (0, _common.cloneData)(_series);\n\t    return series.sort(function (a, b) {\n\t      return a[_constants.keys.LABEL].localeCompare(b[_constants.keys.LABEL], \"en\", { numeric: false });\n\t    });\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    cache.root.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    if (!cache.root) {\n\t      return null;\n\t    }\n\t    if (cache.isEnabled) {\n\t      show();\n\t    } else {\n\t      hide();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setupTooltip(_dataPoint, _xPosition, _yPosition) {\n\t    buildSVG();\n\t\n\t    var _calculateTooltipPosi = calculateTooltipPosition(_xPosition, _yPosition),\n\t        _calculateTooltipPosi2 = _slicedToArray(_calculateTooltipPosi, 2),\n\t        tooltipX = _calculateTooltipPosi2[0],\n\t        tooltipY = _calculateTooltipPosi2[1];\n\t\n\t    setXPosition(tooltipX);\n\t    setYPosition(tooltipY);\n\t    setTitle(_dataPoint[_constants.keys.DATA]);\n\t    setupContent(_dataPoint[_constants.keys.SERIES]);\n\t\n\t    drawTooltip();\n\t    return this;\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.tooltip\", show).on(\"mouseMovePanel.tooltip\", setupTooltip).on(\"mouseOutPanel.tooltip\", hide);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setTitle(_title) {\n\t    cache.title = _title;\n\t    return this;\n\t  }\n\t\n\t  function setXPosition(_xPosition) {\n\t    cache.xPosition = _xPosition;\n\t    return this;\n\t  }\n\t\n\t  function setYPosition(_yPosition) {\n\t    cache.yPosition = _yPosition;\n\t    return this;\n\t  }\n\t\n\t  function setContent(_content) {\n\t    cache.content = _content;\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    bindEvents: bindEvents,\n\t    setXPosition: setXPosition,\n\t    setYPosition: setYPosition,\n\t    setContent: setContent,\n\t    setTitle: setTitle,\n\t    hide: hide,\n\t    show: show,\n\t    drawTooltip: drawTooltip,\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setVisibility: setVisibility\n\t  };\n\t}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Legend;\n\t\n\tvar _tooltip = __webpack_require__(11);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Legend(_container) {\n\t  var IS_LEGEND = true;\n\t  return (0, _tooltip2.default)(_container, IS_LEGEND);\n\t}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Brush;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Brush(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var data = {\n\t    dataBySeries: null\n\t  };\n\t\n\t  var brushExtent = null;\n\t\n\t  // events\n\t  var dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = Math.max(config.width - config.margin.left - config.margin.right, 0);\n\t    cache.chartHeight = Math.max(config.height - config.margin.top - config.margin.bottom, 0);\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"brush-group\", true);\n\t    }\n\t  }\n\t\n\t  function buildBrush() {\n\t    cache.brush = cache.brush || d3.brushX().on(\"start\", handleBrushStart).on(\"brush\", handleBrushMove).on(\"end\", handleBrushEnd);\n\t\n\t    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]]);\n\t\n\t    cache.chartBrush = cache.svg.call(cache.brush);\n\t\n\t    cache.chartBrush.selectAll(\".brush-rect\").attr(\"height\", cache.chartHeight);\n\t\n\t    moveBrush();\n\t  }\n\t\n\t  function getDataExtent() {\n\t    var selection = d3.event.selection;\n\t    var dataExtent = selection.map(function (d) {\n\t      return (0, _common.invertScale)(scales.xScale, d, config.keyType);\n\t    });\n\t    return dataExtent;\n\t  }\n\t\n\t  function validateExtent(_brushExtent) {\n\t    return Array.isArray(_brushExtent) && _brushExtent[0] !== null && typeof _brushExtent[0] !== \"undefined\" && _brushExtent[1] !== null && typeof _brushExtent[1] !== \"undefined\";\n\t  }\n\t\n\t  function clampBrush(_dataExtent, _brushExtent) {\n\t    return [Math.max(_dataExtent[0], _brushExtent[0]), Math.min(_dataExtent[1], _brushExtent[1])];\n\t  }\n\t\n\t  function moveBrush() {\n\t    if (brushExtent === null) {\n\t      return this;\n\t    }\n\t    var dataExtent = scales.xScale.domain();\n\t    var extent = clampBrush(dataExtent, brushExtent);\n\t    if (extent) {\n\t      cache.svg.call(cache.brush.move, extent.map(function (d) {\n\t        return scales.xScale(d);\n\t      }));\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function handleBrushStart() {\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t    dispatcher.call(\"brushStart\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushMove() {\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t    dispatcher.call(\"brushMove\", this, getDataExtent(), config);\n\t  }\n\t\n\t  function handleBrushEnd() {\n\t    // Skip programatic setting and empty selection\n\t    if (!d3.event.sourceEvent || !d3.event.selection) {\n\t      return;\n\t    }\n\t\n\t    var dataExtent = getDataExtent();\n\t    dispatcher.call(\"brushEnd\", this, dataExtent, config);\n\t  }\n\t\n\t  function drawBrush() {\n\t    if (!cache.isEnabled) {\n\t      destroy();\n\t    }\n\t\n\t    buildSVG();\n\t\n\t    if (data.dataBySeries) {\n\t      buildBrush();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_isEnabled) {\n\t    cache.isEnabled = _isEnabled;\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setBrushExtent(_brushExtent) {\n\t    if (validateExtent(_brushExtent)) {\n\t      brushExtent = _brushExtent;\n\t    } else {\n\t      brushExtent = null;\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.svg.remove();\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setData: setData,\n\t    setScales: setScales,\n\t    setBrushExtent: setBrushExtent,\n\t    drawBrush: drawBrush,\n\t    setVisibility: setVisibility,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Hover;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Hover(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    dotRadius: null,\n\t    chartType: null\n\t  };\n\t\n\t  var scales = {\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null,\n\t    colorScale: null\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    svg: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    dateRange: [null, null],\n\t    brush: null,\n\t    chartBrush: null,\n\t    handle: null,\n\t    data: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var data = {\n\t    stack: null,\n\t    groupKeys: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"hover\");\n\t\n\t  var getColor = function getColor(d) {\n\t    return scales.colorScale(d[_constants.keys.ID]);\n\t  };\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.svg) {\n\t      cache.svg = cache.container.append(\"g\").classed(\"hover-group\", true).style(\"pointer-events\", \"none\");\n\t    }\n\t  }\n\t\n\t  function drawHover(_dataPoint, _dataPointXPosition) {\n\t    buildSVG();\n\t\n\t    if (!isNaN(_dataPointXPosition)) {\n\t      moveVerticalMarker(_dataPointXPosition);\n\t      drawVerticalMarker();\n\t      if (config.chartType === \"stackedLine\" || config.chartType === \"stackedArea\" || config.chartType === \"stackedBar\") {\n\t        highlightStackedDataPoints(_dataPoint);\n\t      } else {\n\t        highlightDataPoints(_dataPoint);\n\t      }\n\t      dispatcher.call(\"hover\", this, _dataPoint);\n\t    }\n\t  }\n\t\n\t  function show() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"block\");\n\t    return this;\n\t  }\n\t\n\t  function hide() {\n\t    if (!cache.svg) {\n\t      return null;\n\t    }\n\t    cache.svg.style(\"display\", \"none\");\n\t    return this;\n\t  }\n\t\n\t  function highlightDataPoints(_dataPoint) {\n\t    var dotsData = _dataPoint[_constants.keys.SERIES];\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawHighlightDataPoints(_dotsData) {\n\t    var dots = cache.svg.selectAll(\".dot\").data(_dotsData);\n\t\n\t    dots.enter().append(\"circle\").attr(\"class\", \"dot\").merge(dots).attr(\"cy\", function (d) {\n\t      if (config.chartType === \"stackedArea\" || data.groupKeys[0].indexOf(d[_constants.keys.ID]) > -1) {\n\t        return scales.yScale(d[_constants.keys.VALUE]);\n\t      } else {\n\t        return scales.y2Scale(d[_constants.keys.VALUE]);\n\t      }\n\t    }).attr(\"r\", config.dotRadius).style(\"stroke\", \"none\").style(\"fill\", getColor);\n\t\n\t    dots.exit().remove();\n\t  }\n\t\n\t  function highlightStackedDataPoints(_dataPoint) {\n\t    var stackedDataPoint = { key: _dataPoint[_constants.keys.DATA] };\n\t    _dataPoint.series.forEach(function (d) {\n\t      var id = d[_constants.keys.ID];\n\t      stackedDataPoint[id] = d[_constants.keys.VALUE];\n\t    });\n\t\n\t    var dotsStack = data.stack([stackedDataPoint]);\n\t    var dotsData = dotsStack.map(function (d) {\n\t      var dot = { value: d[0][1] };\n\t      dot[_constants.keys.ID] = d.key;\n\t      return dot;\n\t    });\n\t\n\t    drawHighlightDataPoints(dotsData);\n\t  }\n\t\n\t  function drawVerticalMarker() {\n\t    var verticalMarkerLine = cache.svg.selectAll(\"line\").data([0]);\n\t\n\t    verticalMarkerLine.enter().append(\"line\").classed(\"vertical-marker\", true).merge(verticalMarkerLine).attr(\"y1\", 0).attr(\"y2\", cache.chartHeight);\n\t\n\t    verticalMarkerLine.exit().remove();\n\t  }\n\t\n\t  function moveVerticalMarker(_verticalMarkerXPosition) {\n\t    cache.svg.attr(\"transform\", \"translate(\" + [_verticalMarkerXPosition, 0] + \")\");\n\t  }\n\t\n\t  function bindEvents(_dispatcher) {\n\t    _dispatcher.on(\"mouseOverPanel.hover\", show).on(\"mouseMovePanel.hover\", drawHover).on(\"mouseOutPanel.hover\", hide);\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setData(_data) {\n\t    data = Object.assign({}, data, _data);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    setConfig: setConfig,\n\t    setScales: setScales,\n\t    setData: setData,\n\t    bindEvents: bindEvents,\n\t    highlightDataPoints: highlightDataPoints,\n\t    highlightStackedDataPoints: highlightStackedDataPoints,\n\t    drawVerticalMarker: drawVerticalMarker,\n\t    moveVerticalMarker: moveVerticalMarker,\n\t    on: on\n\t  };\n\t}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Binning;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Binning(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    autoLabel: \"auto\",\n\t    binningToggles: [],\n\t    label: \"BIN:\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    autoItem: null,\n\t    binningItems: null,\n\t    selectedBin: null,\n\t    isAuto: true,\n\t    isEnabled: true\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"change\");\n\t\n\t  function buildSVG() {\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"binning-group\").style(\"float\", \"left\");\n\t\n\t      cache.label = cache.root.append(\"div\").attr(\"class\", \"bin-label\").text(config.label);\n\t\n\t      cache.autoItem = cache.root.append(\"div\").attr(\"class\", \"item item-auto toggleOnOff\").on(\"click.select\", function click() {\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        var toggled = !isSelected;\n\t        setAuto(toggled);\n\t        drawBinning();\n\t        dispatcher.call(\"change\", this, { name: config.autoLabel, isSelected: toggled });\n\t      }).text(config.autoLabel);\n\t\n\t      cache.binningItems = cache.root.selectAll(\".toggleExclusive\").data(config.binningToggles).enter().append(\"div\").attr(\"class\", function (d) {\n\t        return \"item item-\" + d + \" toggleExclusive\";\n\t      }).on(\"click.select\", function click(d) {\n\t        setBinning(d);\n\t        drawBinning();\n\t        var isSelected = this.classList.contains(\"selected\");\n\t        dispatcher.call(\"change\", this, { name: d, isSelected: isSelected });\n\t      }).text(function (d) {\n\t        return d;\n\t      });\n\t    }\n\t\n\t    var LINE_HEIGHT = 20;\n\t    cache.root.style(\"top\", config.margin.top - LINE_HEIGHT + \"px\").style(\"left\", config.margin.left + \"px\");\n\t\n\t    changeBinning(cache.selectedBin);\n\t    toggleAuto(cache.isAuto);\n\t  }\n\t\n\t  function changeBinning(_selectedItemName) {\n\t    if (_selectedItemName) {\n\t      (0, _interactors.exclusiveToggle)(cache.binningItems, \".item-\" + _selectedItemName);\n\t    }\n\t  }\n\t\n\t  function toggleAuto(_shouldBeSelected) {\n\t    cache.autoItem.classed(\"selected\", _shouldBeSelected).classed(\"dimmed\", !_shouldBeSelected);\n\t  }\n\t\n\t  function drawBinning() {\n\t    if (cache.isEnabled) {\n\t      buildSVG();\n\t    } else {\n\t      destroy();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    drawBinning();\n\t    return this;\n\t  }\n\t\n\t  function setBinning(_selectedBin) {\n\t    cache.selectedBin = _selectedBin;\n\t    return this;\n\t  }\n\t\n\t  function setAuto(_isAuto) {\n\t    cache.isAuto = _isAuto;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    cache.root.remove();\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    destroy: destroy,\n\t    drawBinning: drawBinning,\n\t    setBinning: setBinning,\n\t    setAuto: setAuto,\n\t    setVisibility: setVisibility\n\t  };\n\t}\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.toggleOnOff = toggleOnOff;\n\texports.exclusiveToggle = exclusiveToggle;\n\texports.toggle = toggle;\n\texports.blurOnEnter = blurOnEnter;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n\t * @param  {Number} selector A valid selector of the elements to toggle\n\t * @example\n\t * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n\t *\n\t * @return {void}\n\t */\n\t\n\tfunction toggleOnOff(selector, bool) {\n\t  var shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool;\n\t  d3.select(selector).classed(\"selected\", shouldBeSelected).classed(\"dimmed\", !shouldBeSelected);\n\t}\n\t\n\tfunction exclusiveToggle(othersSelection, selector) {\n\t  return toggle(othersSelection, selector, {\n\t    toggleOffIsEnabled: false,\n\t    toggleMultipleIsEnabled: false\n\t  });\n\t}\n\t\n\tfunction toggle(othersSelection, selector) {\n\t  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { toggleOffIsEnabled: false, toggleMultipleIsEnabled: false };\n\t\n\t  /* eslint-disable consistent-this */\n\t  var hasSelection = false;\n\t  var selectionNode = document.querySelector(selector);\n\t\n\t  othersSelection.classed(\"selected\", function selectedClass() {\n\t    var isSelected = this.classList.contains(\"selected\");\n\t    var hasJustBeenClicked = this === selectionNode;\n\t    var shouldBeSelected = false;\n\t\n\t    if (hasJustBeenClicked) {\n\t      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true;\n\t    } else {\n\t      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false;\n\t    }\n\t\n\t    hasSelection = hasSelection || shouldBeSelected;\n\t    return shouldBeSelected;\n\t  });\n\t\n\t  othersSelection.classed(\"dimmed\", function dimmedClass() {\n\t    return hasSelection && !this.classList.contains(\"selected\");\n\t  });\n\t  /* eslint-enable consistent-this */\n\t}\n\t\n\tfunction blurOnEnter(selection) {\n\t  selection.on(\"keypress.enter\", function keypress() {\n\t    if (d3.event.key === \"Enter\") {\n\t      this.blur();\n\t    }\n\t  });\n\t}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DomainEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction DomainEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: null,\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\",\n\t    xDomain: \"auto\",\n\t    yDomain: \"auto\",\n\t    y2Domain: \"auto\",\n\t    xLock: false,\n\t    yLock: false,\n\t    y2Lock: false\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xHitZone: null,\n\t    yHitZone: null,\n\t    y2HitZone: null,\n\t    yMaxInput: null,\n\t    yMinInput: null,\n\t    yLockIcon: null,\n\t    y2MaxInput: null,\n\t    y2MinInput: null,\n\t    y2LockIcon: null,\n\t    xMinInput: null,\n\t    xMaxInput: null,\n\t    xLockIcon: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null,\n\t    yScale: null,\n\t    y2Scale: null,\n\t    hasSecondAxis: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t    var xDomain = config.xDomain === \"auto\" ? scales.xScale.domain() : config.xDomain;\n\t    var yDomain = config.yDomain === \"auto\" ? scales.yScale.domain() : config.yDomain;\n\t    var y2Domain = config.y2Domain === \"auto\" && scales.y2Scale ? scales.y2Scale.domain() : config.y2Domain;\n\t\n\t    var xFormatter = function xFormatter(d) {\n\t      return d;\n\t    };\n\t    if (config.keyType === \"time\") {\n\t      xFormatter = d3.utcFormat(config.dateFormat);\n\t    } else if (config.keyType === \"number\") {\n\t      xFormatter = d3.format(config.numberFormat);\n\t    }\n\t\n\t    var yFormatter = d3.format(config.numberFormat);\n\t    var y2Formatter = d3.format(config.numberFormat);\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"domain-input-group\").style(\"position\", \"absolute\").style(\"top\", 0);\n\t\n\t      // hit zones\n\t      cache.xHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone x\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showXEditor).on(\"mouseout.dispatch\", hideXEditor);\n\t\n\t      cache.yHitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\").on(\"mouseover.dispatch\", showYEditor).on(\"mouseout.dispatch\", hideYEditor);\n\t\n\t      cache.y2HitZone = cache.root.append(\"div\").attr(\"class\", \"hit-zone y2\").style(\"pointer-events\", \"all\").style(\"position\", \"absolute\");\n\t      if (scales.hasSecondAxis) {\n\t        cache.y2HitZone.on(\"mouseover.dispatch\", showY2Editor).on(\"mouseout.dispatch\", hideY2Editor);\n\t      }\n\t\n\t      // y input group\n\t      cache.yMaxInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.yScale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y\", extent: [domain[0], Number(this.innerText)] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yMinInput = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-input y min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.yScale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y\", extent: [Number(this.innerText), domain[1]] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.yLockIcon = cache.yHitZone.append(\"div\").attr(\"class\", \"domain-lock y\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y\" });\n\t      });\n\t\n\t      // y2 input group\n\t      cache.y2MaxInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.y2Scale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y2\", extent: [domain[0], Number(this.innerText)] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2MinInput = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-input y2 min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.y2Scale.domain();\n\t        dispatcher.call(\"domainChange\", this, { axis: \"y2\", extent: [Number(this.innerText), domain[1]] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.y2LockIcon = cache.y2HitZone.append(\"div\").attr(\"class\", \"domain-lock y2\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"y2\" });\n\t      });\n\t\n\t      // x input group\n\t      cache.xMinInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x min\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.xScale.domain();\n\t        var min = (0, _common.stringToType)(this.innerText, config.keyType);\n\t        dispatcher.call(\"domainChange\", this, { axis: \"x\", extent: [min, domain[1]] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xMaxInput = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-input x max\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.xScale.domain();\n\t        var max = (0, _common.stringToType)(this.innerText, config.keyType);\n\t        dispatcher.call(\"domainChange\", this, { axis: \"x\", extent: [domain[0], max] });\n\t      }).call(_interactors.blurOnEnter);\n\t\n\t      cache.xLockIcon = cache.xHitZone.append(\"div\").attr(\"class\", \"domain-lock x\").style(\"position\", \"absolute\").on(\"click\", function change() {\n\t        var isLocked = this.classList.contains(\"locked\");\n\t        this.classList.toggle(\"locked\", !isLocked);\n\t        dispatcher.call(\"domainLockToggle\", this, { isLocked: !isLocked, axis: \"x\" });\n\t      });\n\t\n\t      hideYEditor();\n\t      hideY2Editor();\n\t      hideXEditor();\n\t    }\n\t\n\t    var HOVER_ZONE_SIZE = 40;\n\t    var LOCK_SIZE = 12;\n\t    var INPUT_HEIGHT = 12;\n\t    var PADDING = 4;\n\t    var INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING;\n\t\n\t    cache.xHitZone.style(\"width\", cache.chartWidth + HOVER_ZONE_SIZE * 2 + \"px\").style(\"height\", HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top + cache.chartHeight + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.yHitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left - HOVER_ZONE_SIZE + \"px\");\n\t\n\t    cache.y2HitZone.style(\"width\", HOVER_ZONE_SIZE + \"px\").style(\"height\", cache.chartHeight + HOVER_ZONE_SIZE + \"px\").style(\"top\", config.margin.top - HOVER_ZONE_SIZE + \"px\").style(\"left\", config.margin.left + cache.chartWidth + \"px\");\n\t\n\t    cache.yMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").text(yFormatter(yDomain[1]));\n\t\n\t    cache.yMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").text(yFormatter(yDomain[0]));\n\t\n\t    cache.yLockIcon.classed(\"locked\", config.yLock).style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.y2MaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", HOVER_ZONE_SIZE + \"px\").style(\"left\", PADDING + \"px\").text(y2Formatter(y2Domain[1]));\n\t\n\t    cache.y2MinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT + \"px\").style(\"left\", PADDING + \"px\").text(y2Formatter(y2Domain[0]));\n\t\n\t    cache.y2LockIcon.classed(\"locked\", config.y2Lock).style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"top\", HOVER_ZONE_SIZE - LOCK_SIZE + \"px\");\n\t\n\t    cache.xMinInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + \"px\").text(xFormatter(xDomain[0]));\n\t\n\t    cache.xMaxInput.style(\"width\", INPUT_WIDTH + \"px\").style(\"top\", PADDING + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH + \"px\").text(xFormatter(xDomain[1]));\n\t\n\t    cache.xLockIcon.classed(\"locked\", config.xLock).style(\"width\", LOCK_SIZE + \"px\").style(\"height\", LOCK_SIZE + \"px\").style(\"left\", HOVER_ZONE_SIZE + cache.chartWidth + \"px\");\n\t  }\n\t\n\t  function showYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideYEditor() {\n\t    cache.yHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideY2Editor() {\n\t    cache.y2HitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function showXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"1\");\n\t  }\n\t\n\t  function hideXEditor() {\n\t    cache.xHitZone.style(\"opacity\", \"0\");\n\t  }\n\t\n\t  function drawDomainEditor() {\n\t    if (cache.isEnabled) {\n\t      buildSVG();\n\t    } else {\n\t      destroy();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    drawDomainEditor();\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    if (cache.root) {\n\t      cache.root.remove();\n\t    }\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setScales: setScales,\n\t    setConfig: setConfig,\n\t    drawDomainEditor: drawDomainEditor,\n\t    setVisibility: setVisibility,\n\t    destroy: destroy\n\t  };\n\t}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = BrushRangeEditor;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tvar _interactors = __webpack_require__(16);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction BrushRangeEditor(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500,\n\t    keyType: \"time\",\n\t    dateFormat: \"%b %d, %Y\",\n\t    numberFormat: \".2f\"\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    inputMin: null,\n\t    inputMax: null,\n\t    rangeMin: null,\n\t    rangeMax: null,\n\t    chartWidth: null,\n\t    chartHeight: null,\n\t    isEnabled: true\n\t  };\n\t\n\t  var scales = {\n\t    xScale: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"rangeChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"brush-range-input-group\").style(\"top\", 0);\n\t\n\t      cache.inputMax = cache.root.append(\"div\").attr(\"class\", \"brush-range-input max\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.xScale.domain();\n\t        cache.rangeMax = (0, _common.stringToType)(cache.inputMax.text(), config.keyType);\n\t        dispatcher.call(\"rangeChange\", this, { extent: [domain[0], cache.rangeMax] });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t\n\t      cache.root.append(\"div\").attr(\"class\", \"separator\").text(\"-\").style(\"float\", \"right\");\n\t\n\t      cache.inputMin = cache.root.append(\"div\").attr(\"class\", \"brush-range-input min\").attr(\"contentEditable\", true).on(\"blur\", function change() {\n\t        var domain = scales.xScale.domain();\n\t        cache.rangeMin = (0, _common.stringToType)(cache.inputMin.text(), config.keyType);\n\t        dispatcher.call(\"rangeChange\", this, { extent: [cache.rangeMin, domain[1]] });\n\t      }).call(_interactors.blurOnEnter).style(\"float\", \"right\");\n\t    }\n\t\n\t    var domain = scales.xScale.domain();\n\t    var rangeMin = cache.rangeMin === null ? domain[0] : cache.rangeMin;\n\t    var rangeMax = cache.rangeMax === null ? domain[1] : cache.rangeMax;\n\t    if (config.keyType === \"time\") {\n\t      var format = d3.utcFormat(config.dateFormat);\n\t      rangeMin = format(new Date(rangeMin));\n\t      rangeMax = format(new Date(rangeMax));\n\t    } else {\n\t      var _format = d3.format(config.numberFormat);\n\t      rangeMin = _format(rangeMin);\n\t      rangeMax = _format(rangeMax);\n\t    }\n\t\n\t    cache.inputMin.text(rangeMin);\n\t    cache.inputMax.text(rangeMax);\n\t  }\n\t\n\t  function drawRangeEditor() {\n\t    if (cache.isEnabled) {\n\t      buildSVG();\n\t    } else {\n\t      destroy();\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function setRangeMin(_rangeMin) {\n\t    cache.rangeMin = _rangeMin;\n\t    return this;\n\t  }\n\t\n\t  function setRangeMax(_rangeMax) {\n\t    cache.rangeMax = _rangeMax;\n\t    return this;\n\t  }\n\t\n\t  function setVisibility(_shouldBeVisible) {\n\t    cache.isEnabled = _shouldBeVisible;\n\t    drawRangeEditor();\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  function setScales(_scales) {\n\t    scales = (0, _common.override)(scales, _scales);\n\t    return this;\n\t  }\n\t\n\t  function destroy() {\n\t    if (cache.root) {\n\t      cache.root.remove();\n\t    }\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    drawRangeEditor: drawRangeEditor,\n\t    setRangeMin: setRangeMin,\n\t    setRangeMax: setRangeMax,\n\t    setScales: setScales,\n\t    setVisibility: setVisibility\n\t  };\n\t}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Label;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Label(_container) {\n\t\n\t  var config = {\n\t    margin: {\n\t      top: 60,\n\t      right: 30,\n\t      bottom: 40,\n\t      left: 70\n\t    },\n\t    width: 800,\n\t    height: 500\n\t  };\n\t\n\t  var cache = {\n\t    container: _container,\n\t    root: null,\n\t    xAxisLabel: null,\n\t    yAxisLabel: null,\n\t    y2AxisLabel: null,\n\t    xLabel: null,\n\t    yLabel: null,\n\t    y2Label: null,\n\t    chartWidth: null,\n\t    chartHeight: null\n\t\n\t    // events\n\t  };var dispatcher = d3.dispatch(\"axisLabelChange\");\n\t\n\t  function buildSVG() {\n\t    cache.chartWidth = config.width - config.margin.left - config.margin.right;\n\t    cache.chartHeight = config.height - config.margin.top - config.margin.bottom;\n\t\n\t    if (!cache.root) {\n\t      cache.root = cache.container.append(\"div\").attr(\"class\", \"label-group\").style(\"position\", \"absolute\").style(\"top\", 0).style(\"white-space\", \"nowrap\");\n\t\n\t      cache.xAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label x\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.xLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"x\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%)\");\n\t\n\t      cache.yAxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.yLabel = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"left\", 0).style(\"transform\", \"translate(-50%) rotate(-90deg)\");\n\t\n\t      cache.y2AxisLabel = cache.root.append(\"div\").attr(\"class\", \"axis-label y2\").style(\"position\", \"absolute\").attr(\"contentEditable\", true).on(\"blur\", function blur() {\n\t        config.y2Label = this.innerText;\n\t        dispatcher.call(\"axisLabelChange\", this, { value: this.innerText, type: \"y2\" });\n\t      }).on(\"keypress\", function keypress() {\n\t        if (d3.event.key === \"Enter\") {\n\t          this.blur();\n\t        }\n\t      }).style(\"transform\", \"translate(-50%) rotate(90deg)\");\n\t    }\n\t\n\t    cache.xAxisLabel.text(config.xLabel).style(\"top\", function top() {\n\t      var textHeight = this.getBoundingClientRect().height;\n\t      return config.height - textHeight + \"px\";\n\t    }).style(\"left\", config.margin.left + cache.chartWidth / 2 + \"px\");\n\t\n\t    cache.yAxisLabel.text(config.yLabel).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return textWidth / 2 + \"px\";\n\t    });\n\t\n\t    cache.y2AxisLabel.text(config.y2Label).style(\"top\", config.margin.top + cache.chartHeight / 2 + \"px\").style(\"left\", function top() {\n\t      var textWidth = this.getBoundingClientRect().width;\n\t      return config.width - textWidth / 2 + \"px\";\n\t    });\n\t  }\n\t\n\t  function drawLabels() {\n\t    buildSVG();\n\t    return this;\n\t  }\n\t\n\t  function setXLabels(_xLabel) {\n\t    config.xLabel = _xLabel;\n\t    return this;\n\t  }\n\t\n\t  function setYLabels(_yLabel) {\n\t    config.yLabel = _yLabel;\n\t    return this;\n\t  }\n\t\n\t  function setY2Labels(_y2Label) {\n\t    config.y2Label = _y2Label;\n\t    return this;\n\t  }\n\t\n\t  function on() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = (0, _common.override)(config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    on: on,\n\t    setConfig: setConfig,\n\t    setXLabels: setXLabels,\n\t    setYLabels: setYLabels,\n\t    setY2Labels: setY2Labels,\n\t    drawLabels: drawLabels\n\t  };\n\t}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = DataManager;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tvar _constants = __webpack_require__(5);\n\t\n\tvar _common = __webpack_require__(6);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction DataManager() {\n\t  /* eslint-disable no-magic-numbers */\n\t  var config = {\n\t    keyType: \"number\", // number, string, time,\n\t    range: [0, 100],\n\t    pointCount: 200,\n\t    groupCount: 2,\n\t    lineCount: 4\n\t  };\n\t  var cache = {\n\t    data: null,\n\t    baseDate: null\n\t\n\t    // accessors\n\t  };var getKey = function getKey(d) {\n\t    return d[_constants.keys.DATA];\n\t  };\n\t  var getID = function getID(d) {\n\t    return d[_constants.keys.ID];\n\t  };\n\t\n\t  var DAY_IN_MS = 1000 * 60 * 60 * 24;\n\t\n\t  function generateRandomString(_length) {\n\t    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5);\n\t  }\n\t\n\t  function generateSeries(_dataKeys, _range, _allowNegative) {\n\t    var value = d3.randomUniform.apply(d3, _toConsumableArray(_range))();\n\t    var variabilityRatio = 50;\n\t    var randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio;\n\t    var rnd = d3.randomNormal(0, 1);\n\t    return _dataKeys.map(function (d) {\n\t      value = value + rnd() * randomWalkStepSize;\n\t      if (!_allowNegative && value < randomWalkStepSize) {\n\t        value = value + randomWalkStepSize;\n\t      }\n\t      return {\n\t        value: value.toFixed(2),\n\t        key: config.keyType === \"time\" ? d.toISOString() : d\n\t      };\n\t    });\n\t  }\n\t\n\t  function generateTestDataset() {\n\t    var dataKeys = null;\n\t    if (config.keyType === \"time\") {\n\t      cache.baseDate = new Date();\n\t      var previousDate = new Date(cache.baseDate.getTime() - DAY_IN_MS * config.pointCount);\n\t      dataKeys = d3.timeDay.range(previousDate, cache.baseDate);\n\t    } else if (config.keyType === \"string\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function () {\n\t        return generateRandomString();\n\t      });\n\t      dataKeys.sort(function (a, b) {\n\t        return a.localeCompare(b, \"en\", { numeric: false });\n\t      });\n\t    } else if (config.keyType === \"number\") {\n\t      dataKeys = d3.range(0, config.pointCount).map(function (d, i) {\n\t        return i;\n\t      });\n\t    }\n\t\n\t    var series = d3.range(config.lineCount).map(function (d) {\n\t      return {\n\t        label: \"Label \" + d,\n\t        id: d,\n\t        group: d < config.groupCount ? d : 0,\n\t        values: generateSeries(dataKeys, config.range)\n\t      };\n\t    });\n\t\n\t    cache.data = { series: series\n\t\n\t      // console.log(\"generated data\", cache.data)\n\t\n\t    };return cache.data;\n\t  }\n\t\n\t  function cleanData(_data, _keyType) {\n\t    var dataBySeries = (0, _common.cloneData)(_data[_constants.keys.SERIES]);\n\t    var flatData = [];\n\t\n\t    // Normalize dataBySeries\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES] = (0, _common.sortData)(serie[_constants.keys.VALUES], _keyType);\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        d[_constants.keys.DATA] = _keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        d[_constants.keys.VALUE] = Number(d[_constants.keys.VALUE]);\n\t      });\n\t    });\n\t\n\t    dataBySeries.forEach(function (serie) {\n\t      serie[_constants.keys.VALUES].forEach(function (d) {\n\t        var dataPoint = {};\n\t        dataPoint[_constants.keys.LABEL] = serie[_constants.keys.LABEL];\n\t        dataPoint[_constants.keys.GROUP] = serie[_constants.keys.GROUP];\n\t        dataPoint[_constants.keys.ID] = serie[_constants.keys.ID];\n\t        dataPoint[_constants.keys.DATA] = _keyType === \"time\" ? new Date(d[_constants.keys.DATA]) : d[_constants.keys.DATA];\n\t        dataPoint[_constants.keys.VALUE] = d[_constants.keys.VALUE];\n\t        flatData.push(dataPoint);\n\t      });\n\t    });\n\t\n\t    var flatDataSorted = (0, _common.sortData)(flatData, _keyType);\n\t\n\t    var dataByKey = d3.nest().key(getKey).entries(flatDataSorted).map(function (d) {\n\t      var dataPoint = {};\n\t      dataPoint[_constants.keys.DATA] = _keyType === \"time\" ? new Date(d.key) : d.key;\n\t      dataPoint[_constants.keys.SERIES] = d.values;\n\t      return dataPoint;\n\t    });\n\t\n\t    var groupKeys = {};\n\t    dataBySeries.forEach(function (d) {\n\t      if (!groupKeys[d[_constants.keys.GROUP]]) {\n\t        groupKeys[d[_constants.keys.GROUP]] = [];\n\t      }\n\t      groupKeys[d[_constants.keys.GROUP]].push(d[_constants.keys.ID]);\n\t    });\n\t\n\t    var stackData = dataByKey.map(function (d) {\n\t      var points = {\n\t        key: d[_constants.keys.DATA]\n\t      };\n\t      d.series.forEach(function (dB) {\n\t        points[dB[_constants.keys.ID]] = dB[_constants.keys.VALUE];\n\t      });\n\t\n\t      return points;\n\t    });\n\t\n\t    var stack = d3.stack().keys(dataBySeries.map(getID)).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n\t\n\t    return { dataBySeries: dataBySeries, dataByKey: dataByKey, stack: stack, stackData: stackData, flatDataSorted: flatDataSorted, groupKeys: groupKeys };\n\t  }\n\t\n\t  function getNearestDataPoint(_mouseX, _dataObject, _scales, _keyType) {\n\t    var keyFromInvertedX = (0, _common.invertScale)(_scales.xScale, _mouseX, _keyType);\n\t    var bisectLeft = d3.bisector(getKey).left;\n\t    var dataEntryIndex = bisectLeft(_dataObject.dataByKey, keyFromInvertedX);\n\t    var dataEntryForXPosition = _dataObject.dataByKey[dataEntryIndex];\n\t    var dataEntryForXPositionPrev = _dataObject.dataByKey[Math.max(dataEntryIndex - 1, 0)];\n\t\n\t    var nearestDataPoint = null;\n\t    if (keyFromInvertedX && dataEntryForXPosition && dataEntryForXPositionPrev) {\n\t      if (keyFromInvertedX - dataEntryForXPositionPrev.key < dataEntryForXPosition.key - keyFromInvertedX) {\n\t        nearestDataPoint = dataEntryForXPositionPrev;\n\t      } else {\n\t        nearestDataPoint = dataEntryForXPosition;\n\t      }\n\t    }\n\t    return nearestDataPoint;\n\t  }\n\t\n\t  function filterByKey(_extent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      var values = series[_constants.keys.VALUES];\n\t      var allKeys = values.map(function (d) {\n\t        return d[_constants.keys.DATA];\n\t      });\n\t      var extentMinIndex = allKeys.indexOf(_extent[0]);\n\t      var extentMaxIndex = allKeys.indexOf(_extent[1]);\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].slice(extentMinIndex, extentMaxIndex);\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function filterByDate(_dateExtent) {\n\t    var data = (0, _common.cloneData)(cache.data);\n\t\n\t    data[_constants.keys.SERIES].forEach(function (series) {\n\t      series[_constants.keys.VALUES] = series[_constants.keys.VALUES].filter(function (d) {\n\t        var epoch = new Date(d[_constants.keys.DATA]).getTime();\n\t        return epoch >= _dateExtent[0].getTime() && epoch <= _dateExtent[1].getTime();\n\t      });\n\t    });\n\t\n\t    return data;\n\t  }\n\t\n\t  function setConfig(_config) {\n\t    config = Object.assign({}, config, _config);\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    generateTestDataset: generateTestDataset,\n\t    generateSeries: generateSeries,\n\t    cleanData: cleanData,\n\t    getNearestDataPoint: getNearestDataPoint,\n\t    filterByDate: filterByDate,\n\t    filterByKey: filterByKey,\n\t    setConfig: setConfig\n\t  };\n\t}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Observer;\n\t\n\tvar _d3Service = __webpack_require__(2);\n\t\n\tvar d3 = _interopRequireWildcard(_d3Service);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction Observer(_dataManager) {\n\t  var dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\");\n\t  var dataManager = _dataManager;\n\t\n\t  dispatcher.on(\"brushChange.observer\", function (_e, _brushConfig) {\n\t    var filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e) : dataManager.filterByKey(_e);\n\t    pub(\"dataFilter\", filtered);\n\t  });\n\t\n\t  function sub() {\n\t    dispatcher.on.apply(dispatcher, arguments);\n\t    return this;\n\t  }\n\t\n\t  function pub(_channelName) {\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\t\n\t    dispatcher.call.apply(dispatcher, [_channelName, this].concat(args));\n\t    return this;\n\t  }\n\t\n\t  return {\n\t    sub: sub,\n\t    pub: pub\n\t  };\n\t}\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// mapd3.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bb67db3b0b842a8938af","import Chart from \"./charts/chart.js\"\nimport Tooltip from \"./charts/tooltip.js\"\nimport Legend from \"./charts/legend.js\"\nimport DataManager from \"./charts/data-manager.js\"\nimport Observer from \"./charts/observer.js\"\nimport Binning from \"./charts/binning.js\"\nimport DomainEditor from \"./charts/domain-editor.js\"\nimport BrushRangeEditor from \"./charts/brush-range-editor.js\"\nimport Label from \"./charts/label.js\"\nimport Brush from \"./charts/brush.js\"\nimport Hover from \"./charts/hover.js\"\nimport Interactors from \"./charts/interactors.js\"\nimport {colors} from \"./charts/helpers/colors.js\"\n\nexport {\n  Chart,\n  Tooltip,\n  Legend,\n  DataManager,\n  Observer,\n  Binning,\n  DomainEditor,\n  BrushRangeEditor,\n  Label,\n  Brush,\n  Hover,\n  Interactors,\n  colors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {colors} from \"./helpers/colors\"\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override, throttle, rebind} from \"./helpers/common\"\n\nimport Scale from \"./scale\"\nimport Line from \"./line\"\nimport Bar from \"./bar\"\nimport Axis from \"./axis\"\nimport Tooltip from \"./tooltip\"\nimport Legend from \"./legend\"\nimport Brush from \"./brush\"\nimport Hover from \"./hover\"\nimport Binning from \"./binning\"\nimport DomainEditor from \"./domain-editor\"\nimport BrushRangeEditor from \"./brush-range-editor\"\nimport Label from \"./label\"\nimport DataManager from \"./data-manager\"\n\nexport default function Chart (_container) {\n\n  let config = {\n    // common\n    margin: {\n      top: 48,\n      right: 32,\n      bottom: 48,\n      left: 32\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    chartType: \"line\", // line, area, stackedLine, stackedArea\n    ease: d3.easeLinear,\n\n    // intro animation\n    isAnimated: false,\n    animationDuration: 1500,\n\n    // scale\n    colorSchema: colors.mapdColors.map((d) => ({value: d})),\n    defaultColor: \"skyblue\",\n    xDomain: \"auto\",\n    yDomain: \"auto\",\n    y2Domain: \"auto\",\n\n    // axis\n    tickPadding: 5,\n    xAxisFormat: \"auto\",\n    yAxisFormat: \".2f\",\n    y2AxisFormat: \".2f\",\n    tickSizes: 8,\n    yTicks: \"auto\",\n    y2Ticks: \"auto\",\n    xTickSkip: 0,\n    grid: null,\n    axisTransitionDuration: 0,\n\n    xTitle: \"\",\n    yTitle: \"\",\n\n    // hover\n    dotRadius: 4,\n\n    // tooltip\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n    seriesOrder: [],\n\n    // format\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\",\n\n    // legend\n    legendXPosition: \"auto\",\n    legendYPosition: \"auto\",\n    legendTitle: \"\",\n    legendIsEnabled: true,\n\n    // binning\n    binningResolution: \"1mo\",\n    binningIsAuto: true,\n    binningToggles: [\"10y\", \"1y\", \"1q\", \"1mo\"],\n    binningIsEnabled: true,\n\n    // domain\n    domainEditorIsEnabled: true,\n\n    // brush range\n    brushRangeMin: null,\n    brushRangeMax: null,\n    brushRangeIsEnabled: true,\n\n    // brush\n    brushIsEnabled: true,\n\n    // label\n    xLabel: \"\",\n    yLabel: \"\",\n    y2Label: \"\"\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    panel: null,\n    margin: null,\n    maskingRectangle: null,\n    chartWidth: null, chartHeight: null,\n    xAxis: null, yAxis: null, yAxis2: null\n  }\n\n  const dataObject = {\n    dataBySeries: null,\n    dataByKey: null,\n    data: null,\n    groupKeys: {},\n    hasSecondAxis: false,\n    stackData: null,\n    stack: null,\n    flatDataSorted: null\n  }\n\n  const components = {}\n  const eventCollector = {}\n\n  // events\n  const dispatcher = d3.dispatch(\"mouseOverPanel\", \"mouseOutPanel\", \"mouseMovePanel\")\n  const dataManager = DataManager()\n\n  function render () {\n    buildSVG()\n\n    if (dataObject.dataBySeries) {\n      buildChart()\n    }\n\n    return this\n  }\n\n  function buildSVG () {\n    const w = config.width === \"auto\" ? cache.container.clientWidth : config.width\n    const h = config.height === \"auto\" ? cache.container.clientHeight : config.height\n    cache.chartWidth = Math.max(w - config.margin.left - config.margin.right, 0)\n    cache.chartHeight = Math.max(h - config.margin.top - config.margin.bottom, 0)\n\n    if (!cache.svg) {\n      const template = `<div class=\"mapd3 mapd3-container\">\n        <div class=\"header-group\"></div>\n        <svg class=\"chart\">\n          <g class=\"chart-group\"></g>\n          <g class=\"panel-group\">\n            <rect class=\"panel-background\"></rect>\n          </g>\n          <rect class=\"masking-rectangle\"></rect>\n        </svg>\n      </div>`\n\n      const base = d3.select(cache.container)\n          .html(template)\n\n      cache.container = base.select(\".mapd3-container\")\n          .style(\"position\", \"relative\")\n\n      cache.svg = base.select(\"svg\")\n      cache.headerGroup = base.select(\".header-group\")\n          .style(\"position\", \"absolute\")\n      cache.panel = cache.svg.select(\".panel-group\")\n      cache.chart = cache.svg.select(\".chart-group\")\n\n      addEvents()\n\n      Object.assign(components, {\n        scale: Scale(),\n        axis: Axis(cache.chart),\n        line: Line(cache.panel),\n        bar: Bar(cache.panel),\n        tooltip: Tooltip(cache.container),\n        legend: Legend(cache.container),\n        brush: Brush(cache.panel),\n        hover: Hover(cache.panel),\n        binning: Binning(cache.headerGroup),\n        domainEditor: DomainEditor(cache.container),\n        brushRangeEditor: BrushRangeEditor(cache.headerGroup),\n        label: Label(cache.container)\n      })\n\n      Object.assign(eventCollector, {\n        onBrush: rebind(components.brush),\n        onHover: rebind(components.hover),\n        onBinning: rebind(components.binning),\n        onDomainEditor: rebind(components.domainEditor),\n        onBrushRangeEditor: rebind(components.brushRangeEditor),\n        onLabel: rebind(components.label),\n        onPanel: rebind(dispatcher)\n      })\n    }\n\n    cache.svg\n      .attr(\"width\", config.width)\n      .attr(\"height\", config.height)\n\n    cache.headerGroup\n      .style(\"width\", `${cache.chartWidth}px`)\n      .style(\"left\", `${config.margin.left}px`)\n\n    cache.panel\n      .attr(\"transform\", `translate(${config.margin.left},${config.margin.top})`)\n      .select(\".panel-background\")\n      .attr(\"width\", cache.chartWidth)\n      .attr(\"height\", cache.chartHeight)\n      .attr(\"fill\", \"transparent\")\n\n\n    return this\n  }\n\n  function buildChart () {\n    components.scale\n      .setConfig(config)\n      .setData(dataObject)\n    scales = components.scale.getScales()\n\n    components.axis\n      .setConfig(config)\n      .setScales(scales)\n      .drawAxis()\n      .drawGridLines()\n\n    components.line\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawMarks()\n\n    components.bar\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .drawMarks()\n\n    components.tooltip\n      .setConfig(config)\n      .setScales(scales)\n      .bindEvents(dispatcher)\n      .setVisibility(config.tooltipIsEnabled)\n\n    const legendContent = dataObject.dataBySeries\n        .map((d) => ({\n          id: d.id,\n          key: d.key,\n          label: d.label\n        }))\n\n    components.legend\n      .setConfig(config)\n      .setScales(scales)\n      .setTitle(config.legendTitle)\n      .setContent(legendContent)\n      .setXPosition(config.legendXPosition)\n      .setYPosition(config.legendYPosition)\n      .drawTooltip()\n      .setVisibility(config.legendIsEnabled)\n\n    components.brush\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .setBrushExtent([config.brushRangeMin, config.brushRangeMax])\n      .setVisibility(config.brushIsEnabled)\n      .drawBrush()\n\n    components.hover\n      .setConfig(config)\n      .setScales(scales)\n      .setData(dataObject)\n      .bindEvents(dispatcher)\n\n    components.binning\n      .setConfig(config)\n      .setBinning(config.binningResolution)\n      .setAuto(config.binningIsAuto)\n      .drawBinning()\n      .setVisibility(config.binningIsEnabled)\n\n    components.domainEditor\n      .setConfig(config)\n      .setScales(scales)\n      .drawDomainEditor()\n      .setVisibility(config.domainEditorIsEnabled)\n\n    components.brushRangeEditor\n      .setConfig(config)\n      .setScales(scales)\n      .setRangeMin(config.brushRangeMin)\n      .setRangeMax(config.brushRangeMax)\n      .drawRangeEditor()\n      .setVisibility(config.brushRangeIsEnabled)\n\n    components.label\n      .setConfig(config)\n      .setXLabels(config.xLabel)\n      .setYLabels(config.yLabel)\n      .setY2Labels(config.y2Label)\n      .drawLabels()\n\n    triggerIntroAnimation()\n    return this\n  }\n\n  function setData (_data) {\n    dataObject.data = cloneData(_data[keys.SERIES])\n    const cleanedData = dataManager.cleanData(_data, config.keyType)\n    Object.assign(dataObject, cleanedData)\n\n    render()\n    return this\n  }\n\n  function triggerIntroAnimation () {\n    if (config.isAnimated) {\n      cache.maskingRectangle = cache.svg.select(\".masking-rectangle\")\n        .attr(\"width\", cache.chartWidth - 2)\n        .attr(\"height\", cache.chartHeight)\n        .attr(\"x\", config.margin.left + 1)\n        .attr(\"y\", config.margin.top)\n\n      cache.maskingRectangle.transition()\n        .duration(config.animationDuration)\n        .ease(config.ease)\n        .attr(\"width\", 0)\n        .attr(\"x\", config.width - config.margin.right)\n        .on(\"end\", () => cache.maskingRectangle.remove())\n    }\n  }\n\n  function addEvents () {\n    const THROTTLE_DELAY = 20\n    const throttledDispatch = throttle((...args) => {\n      dispatcher.call(...args)\n    }, THROTTLE_DELAY)\n\n    cache.panel\n      .on(\"mouseover.dispatch\", () => {\n        dispatcher.call(\"mouseOverPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mouseout.dispatch\", () => {\n        dispatcher.call(\"mouseOutPanel\", null, d3.mouse(cache.panel.node()))\n      })\n      .on(\"mousemove.dispatch\", () => {\n        const [mouseX, mouseY] = d3.mouse(cache.panel.node())\n        if (!dataObject.data) { return }\n        const xPosition = mouseX\n        const dataPoint = dataManager.getNearestDataPoint(xPosition, dataObject, scales, config.keyType)\n\n        if (dataPoint) {\n          const dataPointXPosition = scales.xScale(dataPoint[keys.DATA])\n          throttledDispatch(\"mouseMovePanel\", null, dataPoint, dataPointXPosition, mouseY)\n        }\n      })\n  }\n\n  function getEvents () {\n    if (!cache.svg) {\n      render()\n    }\n    return eventCollector\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.on(\".\", null).remove()\n  }\n\n  return {\n    render,\n    setConfig,\n    setData,\n    on,\n    destroy,\n    getEvents\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/chart.js","export {\n\taxisBottom,\n\taxisLeft,\n\taxisRight,\n\ttimeFormat,\n\tutcFormat,\n\tformat,\n\tbisector,\n\textent,\n\tsum,\n\trange,\n\tmerge,\n\tnest,\n\tdispatch,\n\teaseLinear,\n\teaseQuadInOut,\n\tselect,\n\tmouse,\n\tevent,\n\ttransition,\n\trandomUniform,\n\trandomNormal,\n\ttimeDay,\n\ttimeMonth,\n\tarea,\n\tcurveCatmullRom,\n\tline,\n\tstack,\n\tstackOffsetNone,\n\tstackOrderNone,\n\tscaleTime,\n\tscalePoint,\n\tscaleBand,\n\tscaleLinear,\n\tscaleOrdinal,\n\tbrushX\n} from \"d3/build/d3\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/d3-service.js","// https://d3js.org Version 4.11.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.11.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number$1(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = exports.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set$1(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set$1(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar EOL = {};\nvar EOF = {};\nvar QUOTE = 34;\nvar NEWLINE = 10;\nvar RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar radial = function(radius, x, y) {\n  var nodes,\n      strength = constant$6(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant$6(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipRejoin = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius) {\n  var cr = cos$1(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity$4,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon$2 && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nvar naturalEarth1 = function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice$3 = Array.prototype.slice;\n\nfunction shuffle$1(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nvar enclose = function(circles) {\n  var i = 0, n = (circles = shuffle$1(slice$3.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n};\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$4 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$4.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource$1);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource$1);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource$1);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource$1);\n\nvar bates = (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource$1);\n\nvar exponential$1 = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$5 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$5.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$2 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$2), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$1 = formatLocale$1(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$3(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$3)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice$6 = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$6.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nfunction defaultWheelDelta() {\n  return -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable$1() {\n  return \"ontouchstart\" in this;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform$$1) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform$$1);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform$$1 === \"function\" ? transform$$1.apply(this, arguments) : transform$$1)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e);\n    });\n  };\n\n  function scale(transform$$1, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform$$1.k ? transform$$1 : new Transform(k, transform$$1.x, transform$$1.y);\n  }\n\n  function translate(transform$$1, p0, p1) {\n    var x = p0[0] - p1[0] * transform$$1.k, y = p0[1] - p1[1] * transform$$1.k;\n    return x === transform$$1.x && y === transform$$1.y ? transform$$1 : new Transform(transform$$1.k, x, y);\n  }\n\n  function constrain(transform$$1, extent) {\n    var dx0 = transform$$1.invertX(extent[0][0]) - x0,\n        dx1 = transform$$1.invertX(extent[1][0]) - x1,\n        dy0 = transform$$1.invertY(extent[0][1]) - y0,\n        dy1 = transform$$1.invertY(extent[1][1]) - y1;\n    return transform$$1.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform$$1, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform$$1 === \"function\" ? transform$$1.apply(that, args) : transform$$1,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform$$1) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform$$1.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform$$1.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform$$1.invert(this.touch1[0]);\n      this.that.__zoom = transform$$1;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = exports.event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant$12(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent$1;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 3\n// module chunks = 0","export const mapdUI = {\n  skyBlue: \"#22A7F0\"\n}\n\nexport const mapdColors = [\n  \"#ea5545\",\n  \"#bdcf32\",\n  \"#b33dc6\",\n  \"#ef9b20\",\n  \"#87bc45\",\n  \"#f46a9b\",\n  \"#ace5c7\",\n  \"#ede15b\",\n  \"#836dc5\",\n  \"#86d87f\",\n  \"#27aeef\"\n]\n\nexport const grey = [\n  \"#F8F8FA\",\n  \"#EFF2F5\",\n  \"#D2D6DF\",\n  \"#C3C6CF\",\n  \"#ADB0B6\",\n  \"#666A73\",\n  \"#45494E\",\n  \"#363A43\",\n  \"#282C35\"\n]\n\nexport const colors = {\n  mapdUI,\n  mapdColors,\n  grey\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","export const keys = {\n  DATA: \"key\",\n  VALUE: \"value\",\n  ID: \"id\",\n  LABEL: \"label\",\n  GROUP: \"group\",\n  VALUES: \"values\",\n  SERIES: \"series\"\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","import {keys} from \"./constants\"\n\n/**\n * Clones the passed array of data\n * @param  {Object[]} dataToClone Data to clone\n * @return {Object[]}             Cloned data\n */\nexport function cloneData (_dataToClone) {\n  return JSON.parse(JSON.stringify(_dataToClone))\n}\n\nexport function sortData (_data, _keyType) {\n  const sortedData = cloneData(_data)\n  if (_keyType === \"time\") {\n    sortedData.forEach((d) => {\n      d[keys.DATA] = new Date(d[keys.DATA])\n    })\n    sortedData.sort((a, b) => a[keys.DATA].getTime() - b[keys.DATA].getTime())\n  } else if (_keyType === \"string\") {\n    sortedData.sort((a, b) => a[keys.DATA].localeCompare(b[keys.DATA], \"en\", {numeric: false}))\n  } else {\n    sortedData.sort((a, b) => a[keys.DATA] - b[keys.DATA])\n  }\n  return sortedData\n}\n\nexport function getUnique (arr) {\n  return [...new Set(arr)]\n}\n\nexport function invertScale (_scale, _mouseX, _keyType) {\n  if (_keyType === \"time\" || _keyType === \"number\") {\n    return _scale.invert(_mouseX)\n  } else {\n    const bandStep = _scale.step()\n    const index = Math.round((_mouseX) / bandStep)\n    return _scale.domain()[index]\n  }\n}\n\nexport function override (a, b) {\n  const accum = {}\n  for (const x in a) {\n    if (a.hasOwnProperty(x)) {\n      accum[x] = (x in b) ? b[x] : a[x]\n    }\n  }\n  return accum\n}\n\nexport function throttle (callback, limit) {\n  let wait = false\n  let timer = null\n  return function throttleFn (...args) {\n    if (!wait) {\n      wait = true\n      clearTimeout(timer)\n      timer = setTimeout(() => {\n        wait = false\n        callback(...args)\n      }, limit)\n    }\n  }\n}\n\nexport function rebind (target) {\n  return function reapply (...args) {\n    target.on(`${args[0]}.rebind`, ...args.slice(1))\n    return this\n  }\n}\n\nexport function stringToType (str, type) {\n  let converted = str\n  if (type === \"time\") {\n    converted = new Date(str)\n  } else if (type === \"number\") {\n    converted = Number(str)\n  }\n  return converted\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {getUnique, override} from \"./helpers/common\"\n\nexport default function Scale () {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    height: null,\n    width: null,\n    keyType: null,\n    chartType: null,\n    colorSchema: null,\n    defaultColor: null,\n    xDomain: \"auto\",\n    yDomain: \"auto\",\n    y2Domain: \"auto\"\n  }\n\n  let data = {\n    dataByKey: null,\n    dataBySeries: null,\n    flatDataSorted: null,\n    groupKeys: null\n  }\n\n  const getID = (d) => d[keys.ID]\n  const getKey = (d) => d[keys.DATA]\n  const getValue = (d) => d[keys.VALUE]\n\n  function buildXScale (_allKeys) {\n    const chartWidth = config.width - config.margin.left - config.margin.right\n    let xScale = null\n    let domain = null\n\n    if (config.keyType === \"time\") {\n      xScale = d3.scaleTime()\n    } else if (config.keyType === \"number\") {\n      xScale = d3.scaleLinear()\n    } else {\n      xScale = (config.chartType === \"bar\" || config.chartType === \"stackedBar\") ? d3.scaleBand() : d3.scalePoint()\n      xScale.padding(0)\n    }\n\n    if (config.xDomain === \"auto\") {\n      if (config.keyType === \"string\") {\n        domain = _allKeys\n      } else {\n        domain = d3.extent(_allKeys)\n      }\n    } else {\n      domain = config.xDomain\n    }\n\n    xScale.domain(domain)\n      .range([0, chartWidth])\n\n    return xScale\n  }\n\n  function buildYScale (_extent) {\n    const chartHeight = config.height - config.margin.top - config.margin.bottom\n    const yScale = d3.scaleLinear()\n        .domain(_extent)\n        .rangeRound([chartHeight, 0])\n        .nice()\n\n    return yScale\n  }\n\n  function buildColorScale () {\n    const ids = data.dataBySeries.map(getID)\n    const colorScale = d3.scaleOrdinal()\n        .range(config.colorSchema.map((d) => d.value))\n        .domain(config.colorSchema.map((d, i) => d.key || ids[i]))\n        .unknown(config.defaultColor)\n\n    return colorScale\n  }\n\n  function splitByGroups () {\n    const groups = {}\n    data.dataBySeries.forEach((d) => {\n      const key = d[keys.GROUP]\n      if (!groups[key]) {\n        groups[key] = {\n          allValues: [],\n          allKeys: []\n        }\n      }\n      groups[key].allValues = groups[key].allValues.concat(d[keys.VALUES].map(getValue))\n      groups[key].allKeys = groups[key].allKeys.concat(d[keys.VALUES].map(getKey))\n    })\n\n    return groups\n  }\n\n  function getStackedScales () {\n    const allStackHeights = data.dataByKey.map((d) => d3.sum(d.series.map((dB) => dB.value)))\n\n    const allKeys = data.flatDataSorted.map(getKey)\n    const allUniqueKeys = getUnique(allKeys)\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n\n    let yDomain = null\n    if (config.yDomain === \"auto\") {\n      const valuesExtent = d3.extent(allStackHeights)\n      yDomain = [0, valuesExtent[1]]\n    } else {\n      yDomain = config.yDomain\n    }\n    const yScale = buildYScale(yDomain)\n\n    return {\n      xScale,\n      yScale,\n      colorScale\n    }\n  }\n\n  function getHorizontalScales () {\n    const groups = splitByGroups()\n\n    const hasSecondAxis = Object.keys(data.groupKeys).length > 1\n\n    const groupAxis1 = groups[0]\n    const allUniqueKeys = groupAxis1.allKeys\n\n    const xScale = buildXScale(allUniqueKeys)\n    const colorScale = buildColorScale()\n\n    let yDomain = null\n    if (config.yDomain === \"auto\") {\n      yDomain = d3.extent(groupAxis1.allValues)\n    } else {\n      yDomain = config.yDomain\n    }\n    const yScale = buildYScale(yDomain)\n\n    let y2Scale = null\n    if (hasSecondAxis) {\n      let y2Domain = null\n      if (config.y2Domain === \"auto\") {\n        const groupAxis2 = groups[1]\n        y2Domain = d3.extent(groupAxis2.allValues)\n      } else {\n        y2Domain = config.y2Domain\n      }\n\n      y2Scale = yScale.copy()\n        .domain(y2Domain)\n    }\n\n    return {\n      hasSecondAxis,\n      xScale,\n      yScale,\n      y2Scale,\n      colorScale\n    }\n  }\n\n  function getScales () {\n    if (config.chartType === \"stackedBar\"\n      || config.chartType === \"stackedArea\") {\n      return getStackedScales()\n    } else {\n      return getHorizontalScales()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setData,\n    getScales\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/scale.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Line (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    y2Scale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawLines () {\n    const seriesLine = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.yScale(d[keys.VALUE]))\n\n    const seriesLine2 = d3.line()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y((d) => scales.y2Scale(d[keys.VALUE]))\n        .curve(d3.curveCatmullRom)\n\n    const lines = cache.svg.selectAll(\".mark\")\n        .data(data.dataBySeries)\n\n    lines.enter()\n      .append(\"path\")\n      .merge(lines)\n      .attr(\"class\", \"mark line\")\n      .classed(\"y2-line\", (d) => d[keys.GROUP] > 0)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === 0) {\n          return seriesLine(d[keys.VALUES])\n        } else {\n          return seriesLine2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", \"none\")\n\n    lines.exit().remove()\n  }\n\n  function drawAreas () {\n    const seriesArea = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.yScale(d[keys.VALUE]))\n        .y1(() => cache.chartHeight)\n\n    const seriesArea2 = d3.area()\n        .x((d) => scales.xScale(d[keys.DATA]))\n        .y0((d) => scales.y2Scale(d[keys.VALUE]))\n        .y1(() => cache.chartHeight)\n        .curve(d3.curveCatmullRom)\n\n    const areas = cache.svg.selectAll(\".mark\")\n        .data(data.dataBySeries)\n\n    areas.enter()\n      .append(\"path\")\n      .merge(areas)\n      .attr(\"class\", \"mark area\")\n      .classed(\"y2-area\", (d) => d[keys.GROUP] > 0)\n      .attr(\"d\", (d) => {\n        if (d[keys.GROUP] === 0) {\n          return seriesArea(d[keys.VALUES])\n        } else {\n          return seriesArea2(d[keys.VALUES])\n        }\n      })\n      .style(\"stroke\", getColor)\n      .style(\"fill\", getColor)\n\n    areas.exit().remove()\n  }\n\n  function drawStackedAreas () {\n    const seriesLine = d3.area()\n        .x((d) => scales.xScale(d.data[keys.DATA]))\n        .y0((d) => scales.yScale(d[0]))\n        .y1((d) => scales.yScale(d[1]))\n\n    const areas = cache.svg.selectAll(\".mark\")\n        .data(data.stack(data.stackData))\n\n    areas.enter()\n      .append(\"path\")\n      .merge(areas)\n      .attr(\"class\", \"mark stacked-area\")\n      .attr(\"d\", seriesLine)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", (d) => scales.colorScale(d.key))\n\n    areas.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"area\") {\n      drawAreas()\n    } else if (config.chartType === \"line\") {\n      drawLines()\n    } else if (config.chartType === \"stackedArea\") {\n      drawStackedAreas()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","import {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Bar (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    chartType: null\n  }\n\n  let scales = {\n    colorScale: null,\n    xScale: null,\n    yScale: null,\n    y2Scale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartHeight: null\n  }\n\n  let data = {\n    dataBySeries: null,\n    groupKeys: null,\n    stack: null,\n    stackData: null\n  }\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"mark-group\", true)\n    }\n  }\n\n  function drawBars () {\n    const bars = cache.svg.selectAll(\".mark\")\n        .data(data.dataBySeries[0].values)\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark rect\")\n      .merge(bars)\n      .attr(\"x\", (d) => scales.xScale(d[keys.DATA]))\n      .attr(\"y\", (d) => scales.yScale(d[keys.VALUE]))\n      .attr(\"width\", () => scales.xScale.bandwidth())\n      .attr(\"height\", (d) => cache.chartHeight - scales.yScale(d[keys.VALUE]))\n      .style(\"stroke\", \"white\")\n      .style(\"fill\", getColor)\n\n    bars.exit().remove()\n  }\n\n  function drawStackedBars () {\n\n    const stackedBarGroups = cache.svg.selectAll(\".bar-group\")\n        .data(data.stack(data.stackData))\n\n    const stackedUpdate = stackedBarGroups.enter()\n      .append(\"g\")\n      .attr(\"class\", \"bar-group\")\n      .merge(stackedBarGroups)\n      .attr(\"fill\", (d) => scales.colorScale(d.key))\n      .attr(\"stroke\", \"white\")\n\n    stackedBarGroups.exit().remove()\n\n    const stackedBars = stackedUpdate.selectAll(\".mark\")\n        .data((d) => d)\n\n    stackedBars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"mark\")\n      .merge(stackedBars)\n      .attr(\"x\", (d) => scales.xScale(d.data[keys.DATA]))\n      .attr(\"y\", (d) => scales.yScale(d[1]))\n      .attr(\"height\", (d) => scales.yScale(d[0]) - scales.yScale(d[1]))\n      .attr(\"width\", scales.xScale.bandwidth())\n\n    stackedBars.exit().remove()\n  }\n\n  function drawMarks () {\n    buildSVG()\n\n    if (config.chartType === \"bar\") {\n      drawBars()\n    } else if (config.chartType === \"stackedBar\") {\n      drawStackedBars()\n    }\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    drawMarks\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Axis (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    tickSizes: null,\n    tickPadding: null,\n    xAxisFormat: null,\n    yAxisFormat: null,\n    y2AxisFormat: null,\n    keyType: null,\n    yTicks: null,\n    y2Ticks: null,\n    xTickSkip: null,\n    axisTransitionDuration: null,\n    ease: null,\n    grid: null,\n    hoverZoneSize: 30,\n    tickSpacing: 40,\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\"\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null\n  }\n\n  const cache = {\n    container: _container,\n    background: null,\n    chartHeight: null,\n    chartWidth: null,\n    xAxis: null,\n    yAxis: null,\n    y2Axis: null,\n    horizontalGridLines: null,\n    verticalGridLines: null\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"axis-group\", true)\n          .style(\"pointer-events\", \"none\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"grid-lines-group\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis x\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y\")\n\n      cache.svg.append(\"g\").attr(\"class\", \"axis y2\")\n    }\n\n    cache.svg.attr(\"transform\", `translate(${config.margin.left}, ${config.margin.top})`)\n  }\n\n  function formatXAxis () {\n    if (config.keyType === \"time\") {\n      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n        const formatter = d3.timeFormat(config.xAxisFormat)\n        cache.xAxis.tickFormat(formatter)\n      }\n    } else if (config.keyType === \"string\") {\n      cache.xAxis.tickValues(scales.xScale.domain().filter((d, i) => !(i % config.xTickSkip)))\n    } else if (config.keyType === \"number\") {\n      if (config.xAxisFormat && config.xAxisFormat !== \"auto\") {\n        const formatter = d3.format(config.xAxisFormat)\n        cache.xAxis.tickFormat(formatter)\n      }\n    }\n  }\n\n  function formatYAxis (axis) {\n    if (config.yAxisFormat === \"auto\") {\n      let yFormat = config.numberFormat\n      const yExtent = scales.yScale.domain()\n      if ((yExtent[1] - yExtent[0]) > 10000) {\n        yFormat = \".0s\"\n      } else if ((yExtent[1] - yExtent[0]) > 1000) {\n        yFormat = \".2s\"\n      }\n      axis.tickFormat(d3.format(yFormat))\n    } else if (typeof config.yAxisFormat === \"string\") {\n      axis.tickFormat(d3.format(config.yAxisFormat))\n    }\n  }\n\n  function buildAxis () {\n    cache.xAxis = d3.axisBottom(scales.xScale)\n        .tickSize(config.tickSizes, 0)\n        .tickPadding(config.tickPadding)\n\n    formatXAxis()\n\n    cache.yAxis = d3.axisLeft(scales.yScale)\n        .tickSize([config.tickSizes])\n        .tickPadding(config.tickPadding)\n\n    formatYAxis(cache.yAxis)\n\n    if (Number.isInteger(config.yTicks)) {\n      cache.yAxis.ticks(config.yTicks)\n    } else {\n      cache.yAxis.ticks(Math.ceil(cache.chartHeight / config.tickSpacing))\n    }\n\n    if (scales.hasSecondAxis) {\n      cache.y2Axis = d3.axisRight(scales.y2Scale)\n          .tickSize([config.tickSizes])\n          .tickPadding(config.tickPadding)\n\n      formatYAxis(cache.y2Axis)\n\n      if (!isNaN(config.y2Ticks)) {\n        cache.y2Axis.ticks(config.y2Ticks)\n      }\n    }\n  }\n\n  function drawAxis () {\n    buildSVG()\n    buildAxis()\n\n    cache.svg.select(\".axis.x\")\n        .attr(\"transform\", `translate(0, ${cache.chartHeight})`)\n        .call(cache.xAxis)\n\n    cache.svg.select(\".axis.y\")\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .ease(config.ease)\n        .call(cache.yAxis)\n\n    if (scales.hasSecondAxis) {\n      cache.svg.select(\".axis.y2\")\n          .attr(\"transform\", `translate(${cache.chartWidth}, 0)`)\n          .transition()\n          .duration(config.axisTransitionDuration)\n          .ease(config.ease)\n          .call(cache.y2Axis)\n    }\n\n    return this\n  }\n\n  function drawGridLines () {\n    if (config.grid === \"horizontal\" || config.grid === \"full\") {\n      let ticks = null\n      if (Number.isInteger(config.yTicks)) {\n        ticks = config.yTicks\n      } else {\n        ticks = Math.ceil(cache.chartHeight / config.tickSpacing)\n      }\n\n      cache.horizontalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.horizontal-grid-line\")\n          .data(scales.yScale.ticks(ticks))\n\n      cache.horizontalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"horizontal-grid-line\")\n        .merge(cache.horizontalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"x2\", cache.chartWidth)\n        .attr(\"y1\", scales.yScale)\n        .attr(\"y2\", scales.yScale)\n\n      cache.horizontalGridLines.exit().remove()\n    }\n\n    if (config.grid === \"vertical\" || config.grid === \"full\") {\n      cache.verticalGridLines = cache.svg.select(\".grid-lines-group\")\n          .selectAll(\"line.vertical-grid-line\")\n          .data(cache.xAxis.tickValues())\n\n      cache.verticalGridLines.enter()\n        .append(\"line\")\n        .attr(\"class\", \"vertical-grid-line\")\n        .merge(cache.verticalGridLines)\n        .transition()\n        .duration(config.axisTransitionDuration)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", cache.chartHeight)\n        .attr(\"x1\", scales.xScale)\n        .attr(\"x2\", scales.xScale)\n\n      cache.verticalGridLines.exit().remove()\n    }\n\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    drawAxis,\n    drawGridLines\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/axis.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, override} from \"./helpers/common\"\n\nexport default function Tooltip (_container, isLegend = false) {\n\n  let config = {\n    margin: {\n      top: 2,\n      right: 2,\n      bottom: 2,\n      left: 2\n    },\n    width: 250,\n    height: 45,\n\n    // Animations\n    mouseChaseDuration: 0,\n    tooltipEase: d3.easeQuadInOut,\n\n    tooltipHeight: 48,\n    tooltipWidth: 160,\n\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\",\n    seriesOrder: [],\n\n    // from chart\n    keyType: \"time\"\n  }\n\n  let scales = {\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    chartWidth: null,\n    chartHeight: null,\n    tooltipDivider: null,\n    tooltipBody: null,\n    tooltipTitle: null,\n    tooltipBackground: null,\n    xPosition: null,\n    yPosition: null,\n    content: null,\n    title: null,\n    isEnabled: true\n  }\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", isLegend ? \"legend-group\" : \"tooltip-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"pointer-events\", \"none\")\n\n      cache.tooltipTitle = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-title\")\n\n      cache.tooltipBody = cache.root.append(\"div\")\n          .attr(\"class\", \"tooltip-body\")\n    }\n  }\n\n  function calculateTooltipPosition (_mouseX, _mouseY) {\n    const OFFSET = 4\n    const tooltipSize = cache.root.node().getBoundingClientRect()\n    const tooltipX = _mouseX\n    let avoidanceOffset = OFFSET\n    const tooltipY = _mouseY + config.margin.top - tooltipSize.height / 2\n\n    if (_mouseX > (cache.chartWidth / 2)) {\n      avoidanceOffset = -tooltipSize.width - OFFSET\n    }\n    return [tooltipX + avoidanceOffset, tooltipY]\n  }\n\n  function move () {\n    const xPosition = cache.xPosition === \"auto\"\n        ? cache.chartWidth\n        : cache.xPosition\n\n    const yPosition = cache.yPosition === \"auto\"\n        ? config.margin.top\n        : cache.yPosition\n\n    cache.root.transition()\n      .duration(config.mouseChaseDuration)\n      .ease(config.tooltipEase)\n      .style(\"top\", `${yPosition}px`)\n      .style(\"left\", function left () {\n        const width = cache.yPosition === \"auto\" ? this.getBoundingClientRect().width : 0\n        return `${xPosition + config.margin.left - width}px`\n      })\n    return this\n  }\n\n  function drawContent () {\n    const content = cache.content\n    const formatter = d3.format(config.numberFormat)\n\n    const tooltipItems = cache.tooltipBody.selectAll(\".tooltip-item\")\n        .data(content)\n    const tooltipItemsUpdate = tooltipItems.enter().append(\"div\")\n      .attr(\"class\", \"tooltip-item\")\n      .merge(tooltipItems)\n    tooltipItems.exit().remove()\n\n    const tooltipItem = tooltipItemsUpdate.selectAll(\".section\")\n      .data((d) => {\n        const legendData = [\n          {key: \"tooltip-color\", value: scales.colorScale(d[keys.ID])},\n          {key: \"tooltip-label\", value: d[keys.LABEL]}\n        ]\n        if (typeof d[keys.VALUE] !== \"undefined\") {\n          legendData.push({key: \"value\", value: d[keys.VALUE]})\n        }\n        return legendData\n      })\n    tooltipItem.enter().append(\"div\")\n      .merge(tooltipItem)\n      .attr(\"class\", (d) => [\"section\", d.key].join(\" \"))\n      .each(function each (d) {\n        const selection = d3.select(this)\n        if (d.key === \"tooltip-color\") {\n          selection.style(\"background\", d.value)\n        } else if (d.key === \"value\") {\n          selection.html(formatter(d.value))\n        } else {\n          selection.html(d.value)\n        }\n      })\n    tooltipItem.exit().remove()\n    return this\n  }\n\n  function drawTitle () {\n    let title = cache.title\n\n    if (typeof title === \"object\") {\n      title = d3.timeFormat(config.dateFormat)(title)\n    }\n\n    cache.tooltipTitle.html(title)\n    return this\n  }\n\n  function drawTooltip () {\n    buildSVG()\n    drawTitle()\n    drawContent()\n    move()\n    return this\n  }\n\n  function setupContent (_series) {\n    let series = _series\n\n    if (config.seriesOrder.length) {\n      series = sortByTopicsOrder(_series)\n    } else if (_series.length && _series[0][keys.LABEL]) {\n      series = sortByAlpha(_series)\n    }\n\n    cache.content = series\n    return this\n  }\n\n  function sortByTopicsOrder (_series, _order = seriesOrder) {\n    return _order.map((orderName) => _series.filter(({name}) => name === orderName)[0])\n  }\n\n  function sortByAlpha (_series) {\n    const series = cloneData(_series)\n    return series.sort((a, b) => a[keys.LABEL].localeCompare(b[keys.LABEL], \"en\", {numeric: false}))\n  }\n\n  function hide () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"none\")\n    return this\n  }\n\n  function show () {\n    if (!cache.root) { return null }\n    cache.root.style(\"display\", \"block\")\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    if (!cache.root) { return null }\n    if (cache.isEnabled) {\n      show()\n    } else {\n      hide()\n    }\n    return this\n  }\n\n  function setupTooltip (_dataPoint, _xPosition, _yPosition) {\n    buildSVG()\n    const [tooltipX, tooltipY] = calculateTooltipPosition(_xPosition, _yPosition)\n    setXPosition(tooltipX)\n    setYPosition(tooltipY)\n    setTitle(_dataPoint[keys.DATA])\n    setupContent(_dataPoint[keys.SERIES])\n\n    drawTooltip()\n    return this\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.tooltip\", show)\n      .on(\"mouseMovePanel.tooltip\", setupTooltip)\n      .on(\"mouseOutPanel.tooltip\", hide)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setTitle (_title) {\n    cache.title = _title\n    return this\n  }\n\n  function setXPosition (_xPosition) {\n    cache.xPosition = _xPosition\n    return this\n  }\n\n  function setYPosition (_yPosition) {\n    cache.yPosition = _yPosition\n    return this\n  }\n\n  function setContent (_content) {\n    cache.content = _content\n    return this\n  }\n\n  return {\n    bindEvents,\n    setXPosition,\n    setYPosition,\n    setContent,\n    setTitle,\n    hide,\n    show,\n    drawTooltip,\n    setConfig,\n    setScales,\n    setVisibility\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","import Tooltip from \"./tooltip\"\n\nexport default function Legend (_container) {\n  const IS_LEGEND = true\n  return Tooltip(_container, IS_LEGEND)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {cloneData, invertScale, sortData, override} from \"./helpers/common\"\n\nexport default function Brush (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  const cache = {\n    container: _container,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    chartWidth: null,\n    chartHeight: null,\n    isEnabled: true\n  }\n\n  let data = {\n    dataBySeries: null\n  }\n\n  let brushExtent = null\n\n  // events\n  const dispatcher = d3.dispatch(\"brushStart\", \"brushMove\", \"brushEnd\")\n\n  function buildSVG () {\n    cache.chartWidth = Math.max(config.width - config.margin.left - config.margin.right, 0)\n    cache.chartHeight = Math.max(config.height - config.margin.top - config.margin.bottom, 0)\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"brush-group\", true)\n    }\n  }\n\n  function buildBrush () {\n    cache.brush = cache.brush || d3.brushX()\n        .on(\"start\", handleBrushStart)\n        .on(\"brush\", handleBrushMove)\n        .on(\"end\", handleBrushEnd)\n\n    cache.brush.extent([[0, 0], [cache.chartWidth, cache.chartHeight]])\n\n    cache.chartBrush = cache.svg.call(cache.brush)\n\n    cache.chartBrush.selectAll(\".brush-rect\")\n      .attr(\"height\", cache.chartHeight)\n\n    moveBrush()\n  }\n\n  function getDataExtent () {\n    const selection = d3.event.selection\n    const dataExtent = selection.map((d) => invertScale(scales.xScale, d, config.keyType))\n    return dataExtent\n  }\n\n  function validateExtent (_brushExtent) {\n    return (Array.isArray(_brushExtent)\n      && _brushExtent[0] !== null\n      && typeof _brushExtent[0] !== \"undefined\"\n      && _brushExtent[1] !== null\n      && typeof _brushExtent[1] !== \"undefined\")\n  }\n\n  function clampBrush (_dataExtent, _brushExtent) {\n    return [Math.max(_dataExtent[0], _brushExtent[0]), Math.min(_dataExtent[1], _brushExtent[1])]\n  }\n\n  function moveBrush () {\n    if (brushExtent === null) {\n      return this\n    }\n    const dataExtent = scales.xScale.domain()\n    const extent = clampBrush(dataExtent, brushExtent)\n    if (extent) {\n      cache.svg.call(cache.brush.move, extent.map((d) => scales.xScale(d)))\n    }\n    return this\n  }\n\n  function handleBrushStart () {\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n    dispatcher.call(\"brushStart\", this, getDataExtent(), config)\n  }\n\n  function handleBrushMove () {\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n    dispatcher.call(\"brushMove\", this, getDataExtent(), config)\n  }\n\n  function handleBrushEnd () {\n    // Skip programatic setting and empty selection\n    if (!d3.event.sourceEvent || !d3.event.selection) {\n      return\n    }\n\n    const dataExtent = getDataExtent()\n    dispatcher.call(\"brushEnd\", this, dataExtent, config)\n  }\n\n  function drawBrush () {\n    if (!cache.isEnabled) {\n      destroy()\n    }\n\n    buildSVG()\n\n    if (data.dataBySeries) {\n      buildBrush()\n    }\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setVisibility (_isEnabled) {\n    cache.isEnabled = _isEnabled\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setBrushExtent (_brushExtent) {\n    if (validateExtent(_brushExtent)) {\n      brushExtent = _brushExtent\n    } else {\n      brushExtent = null\n    }\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  function destroy () {\n    cache.svg.remove()\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setData,\n    setScales,\n    setBrushExtent,\n    drawBrush,\n    setVisibility,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {override} from \"./helpers/common\"\n\nexport default function Hover (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    dotRadius: null,\n    chartType: null\n  }\n\n  let scales = {\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null,\n    colorScale: null\n  }\n\n  const cache = {\n    container: _container,\n    svg: null,\n    chartWidth: null,\n    chartHeight: null,\n    dateRange: [null, null],\n    brush: null,\n    chartBrush: null,\n    handle: null,\n    data: null,\n    isEnabled: true\n  }\n\n  let data = {\n    stack: null,\n    groupKeys: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"hover\")\n\n  const getColor = (d) => scales.colorScale(d[keys.ID])\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.svg) {\n      cache.svg = cache.container.append(\"g\")\n          .classed(\"hover-group\", true)\n          .style(\"pointer-events\", \"none\")\n    }\n  }\n\n  function drawHover (_dataPoint, _dataPointXPosition) {\n    buildSVG()\n\n    if (!isNaN(_dataPointXPosition)) {\n      moveVerticalMarker(_dataPointXPosition)\n      drawVerticalMarker()\n      if (config.chartType === \"stackedLine\"\n        || config.chartType === \"stackedArea\"\n        || config.chartType === \"stackedBar\") {\n        highlightStackedDataPoints(_dataPoint)\n      } else {\n        highlightDataPoints(_dataPoint)\n      }\n      dispatcher.call(\"hover\", this, _dataPoint)\n    }\n  }\n\n  function show () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"block\")\n    return this\n  }\n\n  function hide () {\n    if (!cache.svg) { return null }\n    cache.svg.style(\"display\", \"none\")\n    return this\n  }\n\n  function highlightDataPoints (_dataPoint) {\n    const dotsData = _dataPoint[keys.SERIES]\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawHighlightDataPoints (_dotsData) {\n    const dots = cache.svg.selectAll(\".dot\")\n        .data(_dotsData)\n\n    dots.enter()\n      .append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .merge(dots)\n      .attr(\"cy\", (d) => {\n        if (config.chartType === \"stackedArea\" || data.groupKeys[0].indexOf(d[keys.ID]) > -1) {\n          return scales.yScale(d[keys.VALUE])\n        } else {\n          return scales.y2Scale(d[keys.VALUE])\n        }\n      })\n      .attr(\"r\", config.dotRadius)\n      .style(\"stroke\", \"none\")\n      .style(\"fill\", getColor)\n\n    dots.exit().remove()\n  }\n\n  function highlightStackedDataPoints (_dataPoint) {\n    const stackedDataPoint = {key: _dataPoint[keys.DATA]}\n    _dataPoint.series.forEach((d) => {\n      const id = d[keys.ID]\n      stackedDataPoint[id] = d[keys.VALUE]\n    })\n\n    const dotsStack = data.stack([stackedDataPoint])\n    const dotsData = dotsStack.map((d) => {\n      const dot = {value: d[0][1]}\n      dot[keys.ID] = d.key\n      return dot\n    })\n\n    drawHighlightDataPoints(dotsData)\n  }\n\n  function drawVerticalMarker () {\n    const verticalMarkerLine = cache.svg.selectAll(\"line\")\n        .data([0])\n\n    verticalMarkerLine.enter()\n      .append(\"line\")\n      .classed(\"vertical-marker\", true)\n      .merge(verticalMarkerLine)\n      .attr(\"y1\", 0)\n      .attr(\"y2\", cache.chartHeight)\n\n    verticalMarkerLine.exit().remove()\n  }\n\n  function moveVerticalMarker (_verticalMarkerXPosition) {\n    cache.svg.attr(\"transform\", `translate(${[_verticalMarkerXPosition, 0]})`)\n  }\n\n  function bindEvents (_dispatcher) {\n    _dispatcher.on(\"mouseOverPanel.hover\", show)\n      .on(\"mouseMovePanel.hover\", drawHover)\n      .on(\"mouseOutPanel.hover\", hide)\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setData (_data) {\n    data = Object.assign({}, data, _data)\n    return this\n  }\n\n  return {\n    setConfig,\n    setScales,\n    setData,\n    bindEvents,\n    highlightDataPoints,\n    highlightStackedDataPoints,\n    drawVerticalMarker,\n    moveVerticalMarker,\n    on\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/hover.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {exclusiveToggle} from \"./interactors\"\n\nexport default function Binning (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    autoLabel: \"auto\",\n    binningToggles: [],\n    label: \"BIN:\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    autoItem: null,\n    binningItems: null,\n    selectedBin: null,\n    isAuto: true,\n    isEnabled: true\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"change\")\n\n  function buildSVG () {\n\n    if (!cache.root) {\n      cache.root = cache.container.append(\"div\")\n          .attr(\"class\", \"binning-group\")\n          .style(\"float\", \"left\")\n\n      cache.label = cache.root.append(\"div\")\n          .attr(\"class\", \"bin-label\")\n          .text(config.label)\n\n      cache.autoItem = cache.root.append(\"div\")\n          .attr(\"class\", \"item item-auto toggleOnOff\")\n          .on(\"click.select\", function click () {\n            const isSelected = this.classList.contains(\"selected\")\n            const toggled = !isSelected\n            setAuto(toggled)\n            drawBinning()\n            dispatcher.call(\"change\", this, {name: config.autoLabel, isSelected: toggled})\n          })\n          .text(config.autoLabel)\n\n      cache.binningItems = cache.root.selectAll(\".toggleExclusive\")\n          .data(config.binningToggles)\n          .enter().append(\"div\")\n          .attr(\"class\", (d) => `item item-${d} toggleExclusive`)\n          .on(\"click.select\", function click (d) {\n            setBinning(d)\n            drawBinning()\n            const isSelected = this.classList.contains(\"selected\")\n            dispatcher.call(\"change\", this, {name: d, isSelected})\n          })\n          .text((d) => d)\n    }\n\n    const LINE_HEIGHT = 20\n    cache.root\n      .style(\"top\", `${config.margin.top - LINE_HEIGHT}px`)\n      .style(\"left\", `${config.margin.left}px`)\n\n    changeBinning(cache.selectedBin)\n    toggleAuto(cache.isAuto)\n  }\n\n  function changeBinning (_selectedItemName) {\n    if (_selectedItemName) {\n      exclusiveToggle(cache.binningItems, `.item-${_selectedItemName}`)\n    }\n  }\n\n  function toggleAuto (_shouldBeSelected) {\n    cache.autoItem\n      .classed(\"selected\", _shouldBeSelected)\n      .classed(\"dimmed\", !_shouldBeSelected)\n  }\n\n  function drawBinning () {\n    if (cache.isEnabled) {\n      buildSVG()\n    } else {\n      destroy()\n    }\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    drawBinning()\n    return this\n  }\n\n  function setBinning (_selectedBin) {\n    cache.selectedBin = _selectedBin\n    return this\n  }\n\n  function setAuto (_isAuto) {\n    cache.isAuto = _isAuto\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  function destroy () {\n    cache.root.remove()\n  }\n\n  return {\n    on,\n    setConfig,\n    destroy,\n    drawBinning,\n    setBinning,\n    setAuto,\n    setVisibility\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/binning.js","import * as d3 from \"./helpers/d3-service\"\n\n/**\n * Toggles selection on clickable elements. Will set classes \"selected\" and \"dimmed\".\n * @param  {Number} selector A valid selector of the elements to toggle\n * @example\n * barChart.on('customClick', britecharts.interactors.multiToggle('rect.bar'))\n *\n * @return {void}\n */\n\nexport function toggleOnOff (selector, bool) {\n  const shouldBeSelected = typeof bool === \"undefined\" ? !d3.select(selector).classed(\"selected\") : bool\n  d3.select(selector)\n    .classed(\"selected\", shouldBeSelected)\n    .classed(\"dimmed\", !shouldBeSelected)\n}\n\nexport function exclusiveToggle (othersSelection, selector) {\n  return toggle(othersSelection, selector, {\n    toggleOffIsEnabled: false,\n    toggleMultipleIsEnabled: false\n  })\n}\n\nexport function toggle (othersSelection, selector, options = {toggleOffIsEnabled: false, toggleMultipleIsEnabled: false}) {\n  /* eslint-disable consistent-this */\n  let hasSelection = false\n  const selectionNode = document.querySelector(selector)\n\n  othersSelection.classed(\"selected\", function selectedClass () {\n    const isSelected = this.classList.contains(\"selected\")\n    const hasJustBeenClicked = this === selectionNode\n    let shouldBeSelected = false\n\n    if (hasJustBeenClicked) {\n      shouldBeSelected = options.toggleOffIsEnabled ? !isSelected : true\n    } else {\n      shouldBeSelected = options.toggleMultipleIsEnabled ? isSelected : false\n    }\n\n    hasSelection = hasSelection || shouldBeSelected\n    return shouldBeSelected\n  })\n\n  othersSelection.classed(\"dimmed\", function dimmedClass () {\n    return hasSelection && !this.classList.contains(\"selected\")\n  })\n  /* eslint-enable consistent-this */\n}\n\nexport function blurOnEnter (selection) {\n  selection.on(\"keypress.enter\", function keypress () {\n    if (d3.event.key === \"Enter\") { this.blur() }\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/interactors.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override, stringToType} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function DomainEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: null,\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\",\n    xDomain: \"auto\",\n    yDomain: \"auto\",\n    y2Domain: \"auto\",\n    xLock: false,\n    yLock: false,\n    y2Lock: false\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xHitZone: null,\n    yHitZone: null,\n    y2HitZone: null,\n    yMaxInput: null,\n    yMinInput: null,\n    yLockIcon: null,\n    y2MaxInput: null,\n    y2MinInput: null,\n    y2LockIcon: null,\n    xMinInput: null,\n    xMaxInput: null,\n    xLockIcon: null,\n    chartWidth: null,\n    chartHeight: null,\n    isEnabled: true\n  }\n\n  let scales = {\n    xScale: null,\n    yScale: null,\n    y2Scale: null,\n    hasSecondAxis: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"domainChange\", \"domainLockToggle\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n    const xDomain = config.xDomain === \"auto\" ? scales.xScale.domain() : config.xDomain\n    const yDomain = config.yDomain === \"auto\" ? scales.yScale.domain() : config.yDomain\n    const y2Domain = (config.y2Domain === \"auto\" && scales.y2Scale) ? scales.y2Scale.domain() : config.y2Domain\n\n    let xFormatter = (d) => d\n    if (config.keyType === \"time\") {\n      xFormatter = d3.utcFormat(config.dateFormat)\n    } else if (config.keyType === \"number\") {\n      xFormatter = d3.format(config.numberFormat)\n    }\n\n    const yFormatter = d3.format(config.numberFormat)\n    const y2Formatter = d3.format(config.numberFormat)\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"domain-input-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n\n      // hit zones\n      cache.xHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone x\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showXEditor)\n          .on(\"mouseout.dispatch\", hideXEditor)\n\n      cache.yHitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n          .on(\"mouseover.dispatch\", showYEditor)\n          .on(\"mouseout.dispatch\", hideYEditor)\n\n      cache.y2HitZone = cache.root.append(\"div\")\n          .attr(\"class\", \"hit-zone y2\")\n          .style(\"pointer-events\", \"all\")\n          .style(\"position\", \"absolute\")\n      if (scales.hasSecondAxis) {\n        cache.y2HitZone\n          .on(\"mouseover.dispatch\", showY2Editor)\n          .on(\"mouseout.dispatch\", hideY2Editor)\n      }\n\n      // y input group\n      cache.yMaxInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.yScale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y\", extent: [domain[0], Number(this.innerText)]})\n        })\n        .call(blurOnEnter)\n\n      cache.yMinInput = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.yScale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y\", extent: [Number(this.innerText), domain[1]]})\n        })\n        .call(blurOnEnter)\n\n      cache.yLockIcon = cache.yHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y\"})\n        })\n\n      // y2 input group\n      cache.y2MaxInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.y2Scale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y2\", extent: [domain[0], Number(this.innerText)]})\n        })\n        .call(blurOnEnter)\n\n      cache.y2MinInput = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-input y2 min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.y2Scale.domain()\n          dispatcher.call(\"domainChange\", this, {axis: \"y2\", extent: [Number(this.innerText), domain[1]]})\n        })\n        .call(blurOnEnter)\n\n      cache.y2LockIcon = cache.y2HitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock y2\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"y2\"})\n        })\n\n      // x input group\n      cache.xMinInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x min\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.xScale.domain()\n          const min = stringToType(this.innerText, config.keyType)\n          dispatcher.call(\"domainChange\", this, {axis: \"x\", extent: [min, domain[1]]})\n        })\n        .call(blurOnEnter)\n\n      cache.xMaxInput = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-input x max\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.xScale.domain()\n          const max = stringToType(this.innerText, config.keyType)\n          dispatcher.call(\"domainChange\", this, {axis: \"x\", extent: [domain[0], max]})\n        })\n        .call(blurOnEnter)\n\n      cache.xLockIcon = cache.xHitZone.append(\"div\")\n        .attr(\"class\", \"domain-lock x\")\n        .style(\"position\", \"absolute\")\n        .on(\"click\", function change () {\n          const isLocked = this.classList.contains(\"locked\")\n          this.classList.toggle(\"locked\", !isLocked)\n          dispatcher.call(\"domainLockToggle\", this, {isLocked: !isLocked, axis: \"x\"})\n        })\n\n      hideYEditor()\n      hideY2Editor()\n      hideXEditor()\n    }\n\n    const HOVER_ZONE_SIZE = 40\n    const LOCK_SIZE = 12\n    const INPUT_HEIGHT = 12\n    const PADDING = 4\n    const INPUT_WIDTH = HOVER_ZONE_SIZE - PADDING\n\n    cache.xHitZone\n      .style(\"width\", `${cache.chartWidth + HOVER_ZONE_SIZE * 2}px`)\n      .style(\"height\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top + cache.chartHeight}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.yHitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left - HOVER_ZONE_SIZE}px`)\n\n    cache.y2HitZone\n      .style(\"width\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"height\", `${cache.chartHeight + HOVER_ZONE_SIZE}px`)\n      .style(\"top\", `${config.margin.top - HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${config.margin.left + cache.chartWidth}px`)\n\n    cache.yMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .text(yFormatter(yDomain[1]))\n\n    cache.yMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .text(yFormatter(yDomain[0]))\n\n    cache.yLockIcon\n      .classed(\"locked\", config.yLock)\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.y2MaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(y2Formatter(y2Domain[1]))\n\n    cache.y2MinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${cache.chartHeight + HOVER_ZONE_SIZE - INPUT_HEIGHT}px`)\n      .style(\"left\", `${PADDING}px`)\n      .text(y2Formatter(y2Domain[0]))\n\n    cache.y2LockIcon\n      .classed(\"locked\", config.y2Lock)\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"top\", `${HOVER_ZONE_SIZE - LOCK_SIZE}px`)\n\n    cache.xMinInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE}px`)\n      .text(xFormatter(xDomain[0]))\n\n    cache.xMaxInput\n      .style(\"width\", `${INPUT_WIDTH}px`)\n      .style(\"top\", `${PADDING}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth - INPUT_WIDTH}px`)\n      .text(xFormatter(xDomain[1]))\n\n    cache.xLockIcon\n      .classed(\"locked\", config.xLock)\n      .style(\"width\", `${LOCK_SIZE}px`)\n      .style(\"height\", `${LOCK_SIZE}px`)\n      .style(\"left\", `${HOVER_ZONE_SIZE + cache.chartWidth}px`)\n  }\n\n  function showYEditor () {\n    cache.yHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideYEditor () {\n    cache.yHitZone.style(\"opacity\", \"0\")\n  }\n\n  function showY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideY2Editor () {\n    cache.y2HitZone.style(\"opacity\", \"0\")\n  }\n\n  function showXEditor () {\n    cache.xHitZone.style(\"opacity\", \"1\")\n  }\n\n  function hideXEditor () {\n    cache.xHitZone.style(\"opacity\", \"0\")\n  }\n\n  function drawDomainEditor () {\n    if (cache.isEnabled) {\n      buildSVG()\n    } else {\n      destroy()\n    }\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    drawDomainEditor()\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function destroy () {\n    if (cache.root) {\n      cache.root.remove()\n    }\n  }\n\n  return {\n    on,\n    setScales,\n    setConfig,\n    drawDomainEditor,\n    setVisibility,\n    destroy\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/domain-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override, stringToType} from \"./helpers/common\"\nimport {blurOnEnter} from \"./interactors\"\n\nexport default function BrushRangeEditor (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500,\n    keyType: \"time\",\n    dateFormat: \"%b %d, %Y\",\n    numberFormat: \".2f\"\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    inputMin: null,\n    inputMax: null,\n    rangeMin: null,\n    rangeMax: null,\n    chartWidth: null,\n    chartHeight: null,\n    isEnabled: true\n  }\n\n  let scales = {\n    xScale: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"rangeChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"brush-range-input-group\")\n          .style(\"top\", 0)\n\n      cache.inputMax = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input max\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.xScale.domain()\n          cache.rangeMax = stringToType(cache.inputMax.text(), config.keyType)\n          dispatcher.call(\"rangeChange\", this, {extent: [domain[0], cache.rangeMax]})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n\n      cache.root.append(\"div\")\n        .attr(\"class\", \"separator\")\n        .text(\"-\")\n        .style(\"float\", \"right\")\n\n      cache.inputMin = cache.root.append(\"div\")\n        .attr(\"class\", \"brush-range-input min\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function change () {\n          const domain = scales.xScale.domain()\n          cache.rangeMin = stringToType(cache.inputMin.text(), config.keyType)\n          dispatcher.call(\"rangeChange\", this, {extent: [cache.rangeMin, domain[1]]})\n        })\n        .call(blurOnEnter)\n        .style(\"float\", \"right\")\n    }\n\n    const domain = scales.xScale.domain()\n    let rangeMin = cache.rangeMin === null ? domain[0] : cache.rangeMin\n    let rangeMax = cache.rangeMax === null ? domain[1] : cache.rangeMax\n    if (config.keyType === \"time\") {\n      const format = d3.utcFormat(config.dateFormat)\n      rangeMin = format(new Date(rangeMin))\n      rangeMax = format(new Date(rangeMax))\n    } else {\n      const format = d3.format(config.numberFormat)\n      rangeMin = format(rangeMin)\n      rangeMax = format(rangeMax)\n    }\n\n    cache.inputMin.text(rangeMin)\n    cache.inputMax.text(rangeMax)\n  }\n\n  function drawRangeEditor () {\n    if (cache.isEnabled) {\n      buildSVG()\n    } else {\n      destroy()\n    }\n    return this\n  }\n\n  function setRangeMin (_rangeMin) {\n    cache.rangeMin = _rangeMin\n    return this\n  }\n\n  function setRangeMax (_rangeMax) {\n    cache.rangeMax = _rangeMax\n    return this\n  }\n\n  function setVisibility (_shouldBeVisible) {\n    cache.isEnabled = _shouldBeVisible\n    drawRangeEditor()\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  function setScales (_scales) {\n    scales = override(scales, _scales)\n    return this\n  }\n\n  function destroy () {\n    if (cache.root) {\n      cache.root.remove()\n    }\n  }\n\n  return {\n    on,\n    setConfig,\n    drawRangeEditor,\n    setRangeMin,\n    setRangeMax,\n    setScales,\n    setVisibility\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush-range-editor.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {override} from \"./helpers/common\"\n\nexport default function Label (_container) {\n\n  let config = {\n    margin: {\n      top: 60,\n      right: 30,\n      bottom: 40,\n      left: 70\n    },\n    width: 800,\n    height: 500\n  }\n\n  const cache = {\n    container: _container,\n    root: null,\n    xAxisLabel: null,\n    yAxisLabel: null,\n    y2AxisLabel: null,\n    xLabel: null,\n    yLabel: null,\n    y2Label: null,\n    chartWidth: null,\n    chartHeight: null\n  }\n\n  // events\n  const dispatcher = d3.dispatch(\"axisLabelChange\")\n\n  function buildSVG () {\n    cache.chartWidth = config.width - config.margin.left - config.margin.right\n    cache.chartHeight = config.height - config.margin.top - config.margin.bottom\n\n    if (!cache.root) {\n      cache.root = cache.container\n          .append(\"div\")\n          .attr(\"class\", \"label-group\")\n          .style(\"position\", \"absolute\")\n          .style(\"top\", 0)\n          .style(\"white-space\", \"nowrap\")\n\n      cache.xAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label x\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.xLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"x\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%)\")\n\n      cache.yAxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.yLabel = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"left\", 0)\n        .style(\"transform\", \"translate(-50%) rotate(-90deg)\")\n\n      cache.y2AxisLabel = cache.root.append(\"div\")\n        .attr(\"class\", \"axis-label y2\")\n        .style(\"position\", \"absolute\")\n        .attr(\"contentEditable\", true)\n        .on(\"blur\", function blur () {\n          config.y2Label = this.innerText\n          dispatcher.call(\"axisLabelChange\", this, {value: this.innerText, type: \"y2\"})\n        })\n        .on(\"keypress\", function keypress () {\n          if (d3.event.key === \"Enter\") {\n            this.blur()\n          }\n        })\n        .style(\"transform\", \"translate(-50%) rotate(90deg)\")\n    }\n\n    cache.xAxisLabel\n        .text(config.xLabel)\n        .style(\"top\", function top () {\n          const textHeight = this.getBoundingClientRect().height\n          return `${config.height - textHeight}px`\n        })\n        .style(\"left\", `${config.margin.left + cache.chartWidth / 2}px`)\n\n    cache.yAxisLabel\n      .text(config.yLabel)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${textWidth / 2}px`\n      })\n\n    cache.y2AxisLabel\n      .text(config.y2Label)\n      .style(\"top\", `${config.margin.top + cache.chartHeight / 2}px`)\n      .style(\"left\", function top () {\n        const textWidth = this.getBoundingClientRect().width\n        return `${config.width - textWidth / 2}px`\n      })\n  }\n\n  function drawLabels () {\n    buildSVG()\n    return this\n  }\n\n  function setXLabels (_xLabel) {\n    config.xLabel = _xLabel\n    return this\n  }\n\n  function setYLabels (_yLabel) {\n    config.yLabel = _yLabel\n    return this\n  }\n\n  function setY2Labels (_y2Label) {\n    config.y2Label = _y2Label\n    return this\n  }\n\n  function on (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function setConfig (_config) {\n    config = override(config, _config)\n    return this\n  }\n\n  return {\n    on,\n    setConfig,\n    setXLabels,\n    setYLabels,\n    setY2Labels,\n    drawLabels\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/label.js","import * as d3 from \"./helpers/d3-service\"\n\nimport {keys} from \"./helpers/constants\"\nimport {invertScale, sortData, cloneData} from \"./helpers/common\"\n\n\nexport default function DataManager () {\n  /* eslint-disable no-magic-numbers */\n  let config = {\n    keyType: \"number\", // number, string, time,\n    range: [0, 100],\n    pointCount: 200,\n    groupCount: 2,\n    lineCount: 4\n  }\n  const cache = {\n    data: null,\n    baseDate: null\n  }\n\n  // accessors\n  const getKey = (d) => d[keys.DATA]\n  const getID = (d) => d[keys.ID]\n\n  const DAY_IN_MS = 1000 * 60 * 60 * 24\n\n  function generateRandomString (_length) {\n    return Math.random().toString(36).replace(/[^a-z0-9]+/g, \"\").substr(0, _length || 5)\n  }\n\n  function generateSeries (_dataKeys, _range, _allowNegative) {\n    let value = d3.randomUniform(..._range)()\n    const variabilityRatio = 50\n    const randomWalkStepSize = (_range[1] - _range[0]) / variabilityRatio\n    const rnd = d3.randomNormal(0, 1)\n    return _dataKeys.map((d) => {\n      value = value + rnd() * randomWalkStepSize\n      if (!_allowNegative && value < randomWalkStepSize) {\n        value = value + randomWalkStepSize\n      }\n      return {\n        value: value.toFixed(2),\n        key: config.keyType === \"time\" ? d.toISOString() : d\n      }\n    })\n  }\n\n  function generateTestDataset () {\n    let dataKeys = null\n    if (config.keyType === \"time\") {\n      cache.baseDate = new Date()\n      const previousDate = new Date(cache.baseDate.getTime() - DAY_IN_MS * config.pointCount)\n      dataKeys = d3.timeDay.range(previousDate, cache.baseDate)\n    } else if (config.keyType === \"string\") {\n      dataKeys = d3.range(0, config.pointCount).map(() => generateRandomString())\n      dataKeys.sort((a, b) => a.localeCompare(b, \"en\", {numeric: false}))\n    } else if (config.keyType === \"number\") {\n      dataKeys = d3.range(0, config.pointCount).map((d, i) => i)\n    }\n\n    const series = d3.range(config.lineCount).map((d) => ({\n      label: `Label ${d}`,\n      id: d,\n      group: d < config.groupCount ? d : 0,\n      values: generateSeries(dataKeys, config.range)\n    }))\n\n    cache.data = {series}\n\n    // console.log(\"generated data\", cache.data)\n\n    return cache.data\n  }\n\n  function cleanData (_data, _keyType) {\n    const dataBySeries = cloneData(_data[keys.SERIES])\n    const flatData = []\n\n    // Normalize dataBySeries\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES] = sortData(serie[keys.VALUES], _keyType)\n      serie[keys.VALUES].forEach((d) => {\n        d[keys.DATA] = _keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        d[keys.VALUE] = Number(d[keys.VALUE])\n      })\n    })\n\n    dataBySeries.forEach((serie) => {\n      serie[keys.VALUES].forEach((d) => {\n        const dataPoint = {}\n        dataPoint[keys.LABEL] = serie[keys.LABEL]\n        dataPoint[keys.GROUP] = serie[keys.GROUP]\n        dataPoint[keys.ID] = serie[keys.ID]\n        dataPoint[keys.DATA] = _keyType === \"time\" ? new Date(d[keys.DATA]) : d[keys.DATA]\n        dataPoint[keys.VALUE] = d[keys.VALUE]\n        flatData.push(dataPoint)\n      })\n    })\n\n    const flatDataSorted = sortData(flatData, _keyType)\n\n    const dataByKey = d3.nest()\n      .key(getKey)\n      .entries(flatDataSorted)\n      .map((d) => {\n        const dataPoint = {}\n        dataPoint[keys.DATA] = _keyType === \"time\" ? new Date(d.key) : d.key\n        dataPoint[keys.SERIES] = d.values\n        return dataPoint\n      })\n\n    const groupKeys = {}\n    dataBySeries.forEach((d) => {\n      if (!groupKeys[d[keys.GROUP]]) {\n        groupKeys[d[keys.GROUP]] = []\n      }\n      groupKeys[d[keys.GROUP]].push(d[keys.ID])\n    })\n\n    const stackData = dataByKey\n        .map((d) => {\n          const points = {\n            key: d[keys.DATA]\n          }\n          d.series.forEach((dB) => {\n            points[dB[keys.ID]] = dB[keys.VALUE]\n          })\n\n          return points\n        })\n\n    const stack = d3.stack()\n        .keys(dataBySeries.map(getID))\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone)\n\n    return {dataBySeries, dataByKey, stack, stackData, flatDataSorted, groupKeys}\n  }\n\n  function getNearestDataPoint (_mouseX, _dataObject, _scales, _keyType) {\n    const keyFromInvertedX = invertScale(_scales.xScale, _mouseX, _keyType)\n    const bisectLeft = d3.bisector(getKey).left\n    const dataEntryIndex = bisectLeft(_dataObject.dataByKey, keyFromInvertedX)\n    const dataEntryForXPosition = _dataObject.dataByKey[dataEntryIndex]\n    const dataEntryForXPositionPrev = _dataObject.dataByKey[Math.max(dataEntryIndex - 1, 0)]\n\n    let nearestDataPoint = null\n    if (keyFromInvertedX && dataEntryForXPosition && dataEntryForXPositionPrev) {\n      if ((keyFromInvertedX - dataEntryForXPositionPrev.key)\n          < (dataEntryForXPosition.key - keyFromInvertedX)) {\n        nearestDataPoint = dataEntryForXPositionPrev\n      } else {\n        nearestDataPoint = dataEntryForXPosition\n      }\n    }\n    return nearestDataPoint\n  }\n\n  function filterByKey (_extent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      const values = series[keys.VALUES]\n      const allKeys = values.map(d => d[keys.DATA])\n      const extentMinIndex = allKeys.indexOf(_extent[0])\n      const extentMaxIndex = allKeys.indexOf(_extent[1])\n      series[keys.VALUES] = series[keys.VALUES].slice(extentMinIndex, extentMaxIndex)\n    })\n\n    return data\n  }\n\n  function filterByDate (_dateExtent) {\n    const data = cloneData(cache.data)\n\n    data[keys.SERIES].forEach((series) => {\n      series[keys.VALUES] = series[keys.VALUES].filter((d) => {\n        const epoch = new Date(d[keys.DATA]).getTime()\n        return epoch >= _dateExtent[0].getTime()\n          && epoch <= _dateExtent[1].getTime()\n      })\n    })\n\n    return data\n  }\n\n  function setConfig (_config) {\n    config = Object.assign({}, config, _config)\n    return this\n  }\n\n  return {\n    generateTestDataset,\n    generateSeries,\n    cleanData,\n    getNearestDataPoint,\n    filterByDate,\n    filterByKey,\n    setConfig\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/data-manager.js","import * as d3 from \"./helpers/d3-service\"\n\nexport default function Observer (_dataManager) {\n  const dispatcher = d3.dispatch(\"brushChange\", \"dataFilter\")\n  const dataManager = _dataManager\n\n  dispatcher.on(\"brushChange.observer\", (_e, _brushConfig) => {\n    const filtered = _brushConfig.keyType === \"time\" ? dataManager.filterByDate(_e)\n      : dataManager.filterByKey(_e)\n    pub(\"dataFilter\", filtered)\n  })\n\n  function sub (...args) {\n    dispatcher.on(...args)\n    return this\n  }\n\n  function pub (_channelName, ...args) {\n    dispatcher.call(_channelName, this, ...args)\n    return this\n  }\n\n  return {\n    sub,\n    pub\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/observer.js"],"sourceRoot":""}